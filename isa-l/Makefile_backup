# Makefile.in generated by automake 1.13.4 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



########################################################################
#  Copyright(c) 2011-2019 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

##################################################################
#  Copyright (c) 2019 Huawei Technologies Co., Ltd.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Huawei Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

########################################################################
#  Copyright(c) 2011-2015 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

########################################################################
#  Copyright(c) 2019 Arm Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Arm Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#########################################################################

########################################################################
#  Copyright(c) 2011-2017 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

########################################################################
#  Copyright(c) 2020 Arm Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Arm Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#########################################################################

########################################################################
#  Copyright(c) 2011-2016 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

########################################################################
#  Copyright(c) 2011-2017 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

########################################################################
#  Copyright(c) 2011-2018 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

########################################################################
#  Copyright(c) 2011-2018 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

########################################################################
#  Copyright(c) 2011-2018 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

########################################################################
#  Copyright(c) 2019 Arm Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Arm Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#########################################################################





am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/isa-l
pkgincludedir = $(includedir)/isa-l
pkglibdir = $(libdir)/isa-l
pkglibexecdir = $(libexecdir)/isa-l
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = programs/igzip$(EXEEXT)
DIST_COMMON = $(srcdir)/erasure_code/Makefile.am \
	$(srcdir)/erasure_code/aarch64/Makefile.am \
	$(srcdir)/erasure_code/ppc64le/Makefile.am \
	$(srcdir)/raid/Makefile.am $(srcdir)/raid/aarch64/Makefile.am \
	$(srcdir)/crc/Makefile.am $(srcdir)/crc/aarch64/Makefile.am \
	$(srcdir)/igzip/Makefile.am $(srcdir)/tests/fuzz/Makefile.am \
	$(srcdir)/examples/ec/Makefile.am \
	$(srcdir)/programs/Makefile.am $(srcdir)/mem/Makefile.am \
	$(srcdir)/mem/aarch64/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(srcdir)/libisal.pc.in \
	$(top_srcdir)/build-aux/depcomp $(dist_man_MANS) \
	$(nobase_include_HEADERS) $(noinst_HEADERS) \
	$(pkginclude_HEADERS) $(top_srcdir)/build-aux/test-driver \
	build-aux/config.guess build-aux/config.sub build-aux/depcomp \
	build-aux/install-sh build-aux/missing build-aux/ltmain.sh \
	$(top_srcdir)/build-aux/config.guess \
	$(top_srcdir)/build-aux/config.sub \
	$(top_srcdir)/build-aux/install-sh \
	$(top_srcdir)/build-aux/ltmain.sh \
	$(top_srcdir)/build-aux/missing
am__append_1 = ${lsrc_x86_64}
am__append_2 = ${other_tests_x86_64}
#am__append_3 = ${lsrc_x86_32}
#am__append_4 = ${other_tests_x86_32}
#am__append_5 = ${lsrc_aarch64}
#am__append_6 = ${other_tests_aarch64}
#am__append_7 = ${lsrc_ppc64le}
#am__append_8 = ${other_tests_ppc64le}
#am__append_9 = ${lsrc_base_aliases}
check_PROGRAMS = $(am__EXEEXT_10)
TESTS = $(am__EXEEXT_10)
EXTRA_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_8) \
	$(am__EXEEXT_9)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = libisal.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(includedir)" "$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libisal_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__libisal_la_SOURCES_DIST = erasure_code/ec_base.c raid/raid_base.c \
	crc/crc_base.c crc/crc64_base.c igzip/igzip.c \
	igzip/hufftables_c.c igzip/igzip_base.c igzip/igzip_icf_base.c \
	igzip/adler32_base.c igzip/flatten_ll.c igzip/encode_df.c \
	igzip/igzip_icf_body.c igzip/huff_codes.c \
	igzip/igzip_inflate.c mem/mem_zero_detect_base.c \
	erasure_code/ec_highlevel_func.c \
	erasure_code/gf_vect_mul_sse.asm \
	erasure_code/gf_vect_mul_avx.asm \
	erasure_code/gf_vect_dot_prod_sse.asm \
	erasure_code/gf_vect_dot_prod_avx.asm \
	erasure_code/gf_vect_dot_prod_avx2.asm \
	erasure_code/gf_2vect_dot_prod_sse.asm \
	erasure_code/gf_3vect_dot_prod_sse.asm \
	erasure_code/gf_4vect_dot_prod_sse.asm \
	erasure_code/gf_5vect_dot_prod_sse.asm \
	erasure_code/gf_6vect_dot_prod_sse.asm \
	erasure_code/gf_2vect_dot_prod_avx.asm \
	erasure_code/gf_3vect_dot_prod_avx.asm \
	erasure_code/gf_4vect_dot_prod_avx.asm \
	erasure_code/gf_5vect_dot_prod_avx.asm \
	erasure_code/gf_6vect_dot_prod_avx.asm \
	erasure_code/gf_2vect_dot_prod_avx2.asm \
	erasure_code/gf_3vect_dot_prod_avx2.asm \
	erasure_code/gf_4vect_dot_prod_avx2.asm \
	erasure_code/gf_5vect_dot_prod_avx2.asm \
	erasure_code/gf_6vect_dot_prod_avx2.asm \
	erasure_code/gf_vect_mad_sse.asm \
	erasure_code/gf_2vect_mad_sse.asm \
	erasure_code/gf_3vect_mad_sse.asm \
	erasure_code/gf_4vect_mad_sse.asm \
	erasure_code/gf_5vect_mad_sse.asm \
	erasure_code/gf_6vect_mad_sse.asm \
	erasure_code/gf_vect_mad_avx.asm \
	erasure_code/gf_2vect_mad_avx.asm \
	erasure_code/gf_3vect_mad_avx.asm \
	erasure_code/gf_4vect_mad_avx.asm \
	erasure_code/gf_5vect_mad_avx.asm \
	erasure_code/gf_6vect_mad_avx.asm \
	erasure_code/gf_vect_mad_avx2.asm \
	erasure_code/gf_2vect_mad_avx2.asm \
	erasure_code/gf_3vect_mad_avx2.asm \
	erasure_code/gf_4vect_mad_avx2.asm \
	erasure_code/gf_5vect_mad_avx2.asm \
	erasure_code/gf_6vect_mad_avx2.asm \
	erasure_code/ec_multibinary.asm \
	erasure_code/gf_vect_dot_prod_avx512.asm \
	erasure_code/gf_2vect_dot_prod_avx512.asm \
	erasure_code/gf_3vect_dot_prod_avx512.asm \
	erasure_code/gf_4vect_dot_prod_avx512.asm \
	erasure_code/gf_5vect_dot_prod_avx512.asm \
	erasure_code/gf_6vect_dot_prod_avx512.asm \
	erasure_code/gf_vect_mad_avx512.asm \
	erasure_code/gf_2vect_mad_avx512.asm \
	erasure_code/gf_3vect_mad_avx512.asm \
	erasure_code/gf_4vect_mad_avx512.asm \
	erasure_code/gf_5vect_mad_avx512.asm \
	erasure_code/gf_6vect_mad_avx512.asm raid/xor_gen_sse.asm \
	raid/pq_gen_sse.asm raid/xor_check_sse.asm \
	raid/pq_check_sse.asm raid/pq_gen_avx.asm raid/xor_gen_avx.asm \
	raid/pq_gen_avx2.asm raid/xor_gen_avx512.asm \
	raid/pq_gen_avx512.asm raid/raid_multibinary.asm \
	crc/crc16_t10dif_01.asm crc/crc16_t10dif_by4.asm \
	crc/crc16_t10dif_02.asm crc/crc16_t10dif_by16_10.asm \
	crc/crc16_t10dif_copy_by4.asm crc/crc16_t10dif_copy_by4_02.asm \
	crc/crc32_ieee_01.asm crc/crc32_ieee_02.asm \
	crc/crc32_ieee_by4.asm crc/crc32_ieee_by16_10.asm \
	crc/crc32_iscsi_01.asm crc/crc32_iscsi_00.asm \
	crc/crc32_iscsi_by16_10.asm crc/crc_multibinary.asm \
	crc/crc64_multibinary.asm crc/crc64_ecma_refl_by8.asm \
	crc/crc64_ecma_refl_by16_10.asm crc/crc64_ecma_norm_by8.asm \
	crc/crc64_ecma_norm_by16_10.asm crc/crc64_iso_refl_by8.asm \
	crc/crc64_iso_refl_by16_10.asm crc/crc64_iso_norm_by8.asm \
	crc/crc64_iso_norm_by16_10.asm crc/crc64_jones_refl_by8.asm \
	crc/crc64_jones_refl_by16_10.asm crc/crc64_jones_norm_by8.asm \
	crc/crc64_jones_norm_by16_10.asm crc/crc32_gzip_refl_by8.asm \
	crc/crc32_gzip_refl_by8_02.asm crc/crc32_gzip_refl_by16_10.asm \
	igzip/igzip_body.asm igzip/igzip_finish.asm \
	igzip/igzip_icf_body_h1_gr_bt.asm igzip/igzip_icf_finish.asm \
	igzip/rfc1951_lookup.asm igzip/adler32_sse.asm \
	igzip/adler32_avx2_4.asm igzip/igzip_multibinary.asm \
	igzip/igzip_update_histogram_01.asm \
	igzip/igzip_update_histogram_04.asm \
	igzip/igzip_decode_block_stateless_01.asm \
	igzip/igzip_decode_block_stateless_04.asm \
	igzip/igzip_inflate_multibinary.asm igzip/encode_df_04.asm \
	igzip/encode_df_06.asm igzip/proc_heap.asm \
	igzip/igzip_deflate_hash.asm \
	igzip/igzip_gen_icf_map_lh1_06.asm \
	igzip/igzip_gen_icf_map_lh1_04.asm \
	igzip/igzip_set_long_icf_fg_04.asm \
	igzip/igzip_set_long_icf_fg_06.asm mem/mem_zero_detect_avx.asm \
	mem/mem_zero_detect_sse.asm mem/mem_multibinary.asm \
	raid/pq_gen_sse_i32.asm raid/pq_check_sse_i32.asm \
	raid/raid_multibinary_i32.asm crc/crc_base_aliases.c \
	igzip/igzip_base_aliases.c igzip/proc_heap_base.c \
	erasure_code/aarch64/ec_aarch64_highlevel_func.c \
	erasure_code/aarch64/ec_aarch64_dispatcher.c \
	erasure_code/aarch64/gf_vect_dot_prod_neon.S \
	erasure_code/aarch64/gf_2vect_dot_prod_neon.S \
	erasure_code/aarch64/gf_3vect_dot_prod_neon.S \
	erasure_code/aarch64/gf_4vect_dot_prod_neon.S \
	erasure_code/aarch64/gf_5vect_dot_prod_neon.S \
	erasure_code/aarch64/gf_vect_mad_neon.S \
	erasure_code/aarch64/gf_2vect_mad_neon.S \
	erasure_code/aarch64/gf_3vect_mad_neon.S \
	erasure_code/aarch64/gf_4vect_mad_neon.S \
	erasure_code/aarch64/gf_5vect_mad_neon.S \
	erasure_code/aarch64/gf_6vect_mad_neon.S \
	erasure_code/aarch64/gf_vect_mul_neon.S \
	erasure_code/aarch64/ec_multibinary_arm.S \
	raid/aarch64/xor_gen_neon.S raid/aarch64/pq_gen_neon.S \
	raid/aarch64/xor_check_neon.S raid/aarch64/pq_check_neon.S \
	raid/aarch64/raid_multibinary_arm.S \
	raid/aarch64/raid_aarch64_dispatcher.c \
	crc/aarch64/crc_multibinary_arm.S \
	crc/aarch64/crc_aarch64_dispatcher.c \
	crc/aarch64/crc16_t10dif_pmull.S \
	crc/aarch64/crc16_t10dif_copy_pmull.S \
	crc/aarch64/crc32_ieee_norm_pmull.S \
	crc/aarch64/crc64_ecma_refl_pmull.S \
	crc/aarch64/crc64_ecma_norm_pmull.S \
	crc/aarch64/crc64_iso_refl_pmull.S \
	crc/aarch64/crc64_iso_norm_pmull.S \
	crc/aarch64/crc64_jones_refl_pmull.S \
	crc/aarch64/crc64_jones_norm_pmull.S \
	crc/aarch64/crc32_iscsi_refl_pmull.S \
	crc/aarch64/crc32_gzip_refl_pmull.S \
	crc/aarch64/crc32_iscsi_3crc_fold.S \
	crc/aarch64/crc32_gzip_refl_3crc_fold.S \
	crc/aarch64/crc32_iscsi_crc_ext.S \
	crc/aarch64/crc32_gzip_refl_crc_ext.S \
	crc/aarch64/crc32_mix_default.S \
	crc/aarch64/crc32c_mix_default.S \
	crc/aarch64/crc32_mix_neoverse_n1.S \
	crc/aarch64/crc32c_mix_neoverse_n1.S \
	igzip/aarch64/igzip_inflate_multibinary_arm64.S \
	igzip/aarch64/igzip_multibinary_arm64.S \
	igzip/aarch64/igzip_isal_adler32_neon.S \
	igzip/aarch64/igzip_multibinary_aarch64_dispatcher.c \
	igzip/aarch64/igzip_deflate_body_aarch64.S \
	igzip/aarch64/igzip_deflate_finish_aarch64.S \
	igzip/aarch64/isal_deflate_icf_body_hash_hist.S \
	igzip/aarch64/isal_deflate_icf_finish_hash_hist.S \
	igzip/aarch64/igzip_set_long_icf_fg.S \
	igzip/aarch64/encode_df.S \
	igzip/aarch64/isal_update_histogram.S \
	igzip/aarch64/gen_icf_map.S \
	igzip/aarch64/igzip_deflate_hash_aarch64.S \
	igzip/aarch64/igzip_decode_huffman_code_block_aarch64.S \
	mem/aarch64/mem_zero_detect_neon.S \
	mem/aarch64/mem_multibinary_arm.S \
	mem/aarch64/mem_aarch64_dispatcher.c \
	erasure_code/ppc64le/ec_base_vsx.c \
	erasure_code/ppc64le/gf_vect_mul_vsx.c \
	erasure_code/ppc64le/gf_vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_vect_mad_vsx.c \
	erasure_code/ppc64le/gf_2vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_2vect_mad_vsx.c \
	erasure_code/ppc64le/gf_3vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_3vect_mad_vsx.c \
	erasure_code/ppc64le/gf_4vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_4vect_mad_vsx.c \
	erasure_code/ppc64le/gf_5vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_5vect_mad_vsx.c \
	erasure_code/ppc64le/gf_6vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_6vect_mad_vsx.c \
	raid/raid_base_aliases.c mem/mem_zero_detect_base_aliases.c \
	erasure_code/ec_base_aliases.c
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = erasure_code/ec_base.lo raid/raid_base.lo \
	crc/crc_base.lo crc/crc64_base.lo igzip/igzip.lo \
	igzip/hufftables_c.lo igzip/igzip_base.lo \
	igzip/igzip_icf_base.lo igzip/adler32_base.lo \
	igzip/flatten_ll.lo igzip/encode_df.lo igzip/igzip_icf_body.lo \
	igzip/huff_codes.lo igzip/igzip_inflate.lo \
	mem/mem_zero_detect_base.lo
am__objects_2 = erasure_code/ec_highlevel_func.lo \
	erasure_code/gf_vect_mul_sse.lo \
	erasure_code/gf_vect_mul_avx.lo \
	erasure_code/gf_vect_dot_prod_sse.lo \
	erasure_code/gf_vect_dot_prod_avx.lo \
	erasure_code/gf_vect_dot_prod_avx2.lo \
	erasure_code/gf_2vect_dot_prod_sse.lo \
	erasure_code/gf_3vect_dot_prod_sse.lo \
	erasure_code/gf_4vect_dot_prod_sse.lo \
	erasure_code/gf_5vect_dot_prod_sse.lo \
	erasure_code/gf_6vect_dot_prod_sse.lo \
	erasure_code/gf_2vect_dot_prod_avx.lo \
	erasure_code/gf_3vect_dot_prod_avx.lo \
	erasure_code/gf_4vect_dot_prod_avx.lo \
	erasure_code/gf_5vect_dot_prod_avx.lo \
	erasure_code/gf_6vect_dot_prod_avx.lo \
	erasure_code/gf_2vect_dot_prod_avx2.lo \
	erasure_code/gf_3vect_dot_prod_avx2.lo \
	erasure_code/gf_4vect_dot_prod_avx2.lo \
	erasure_code/gf_5vect_dot_prod_avx2.lo \
	erasure_code/gf_6vect_dot_prod_avx2.lo \
	erasure_code/gf_vect_mad_sse.lo \
	erasure_code/gf_2vect_mad_sse.lo \
	erasure_code/gf_3vect_mad_sse.lo \
	erasure_code/gf_4vect_mad_sse.lo \
	erasure_code/gf_5vect_mad_sse.lo \
	erasure_code/gf_6vect_mad_sse.lo \
	erasure_code/gf_vect_mad_avx.lo \
	erasure_code/gf_2vect_mad_avx.lo \
	erasure_code/gf_3vect_mad_avx.lo \
	erasure_code/gf_4vect_mad_avx.lo \
	erasure_code/gf_5vect_mad_avx.lo \
	erasure_code/gf_6vect_mad_avx.lo \
	erasure_code/gf_vect_mad_avx2.lo \
	erasure_code/gf_2vect_mad_avx2.lo \
	erasure_code/gf_3vect_mad_avx2.lo \
	erasure_code/gf_4vect_mad_avx2.lo \
	erasure_code/gf_5vect_mad_avx2.lo \
	erasure_code/gf_6vect_mad_avx2.lo \
	erasure_code/ec_multibinary.lo \
	erasure_code/gf_vect_dot_prod_avx512.lo \
	erasure_code/gf_2vect_dot_prod_avx512.lo \
	erasure_code/gf_3vect_dot_prod_avx512.lo \
	erasure_code/gf_4vect_dot_prod_avx512.lo \
	erasure_code/gf_5vect_dot_prod_avx512.lo \
	erasure_code/gf_6vect_dot_prod_avx512.lo \
	erasure_code/gf_vect_mad_avx512.lo \
	erasure_code/gf_2vect_mad_avx512.lo \
	erasure_code/gf_3vect_mad_avx512.lo \
	erasure_code/gf_4vect_mad_avx512.lo \
	erasure_code/gf_5vect_mad_avx512.lo \
	erasure_code/gf_6vect_mad_avx512.lo raid/xor_gen_sse.lo \
	raid/pq_gen_sse.lo raid/xor_check_sse.lo raid/pq_check_sse.lo \
	raid/pq_gen_avx.lo raid/xor_gen_avx.lo raid/pq_gen_avx2.lo \
	raid/xor_gen_avx512.lo raid/pq_gen_avx512.lo \
	raid/raid_multibinary.lo crc/crc16_t10dif_01.lo \
	crc/crc16_t10dif_by4.lo crc/crc16_t10dif_02.lo \
	crc/crc16_t10dif_by16_10.lo crc/crc16_t10dif_copy_by4.lo \
	crc/crc16_t10dif_copy_by4_02.lo crc/crc32_ieee_01.lo \
	crc/crc32_ieee_02.lo crc/crc32_ieee_by4.lo \
	crc/crc32_ieee_by16_10.lo crc/crc32_iscsi_01.lo \
	crc/crc32_iscsi_00.lo crc/crc32_iscsi_by16_10.lo \
	crc/crc_multibinary.lo crc/crc64_multibinary.lo \
	crc/crc64_ecma_refl_by8.lo crc/crc64_ecma_refl_by16_10.lo \
	crc/crc64_ecma_norm_by8.lo crc/crc64_ecma_norm_by16_10.lo \
	crc/crc64_iso_refl_by8.lo crc/crc64_iso_refl_by16_10.lo \
	crc/crc64_iso_norm_by8.lo crc/crc64_iso_norm_by16_10.lo \
	crc/crc64_jones_refl_by8.lo crc/crc64_jones_refl_by16_10.lo \
	crc/crc64_jones_norm_by8.lo crc/crc64_jones_norm_by16_10.lo \
	crc/crc32_gzip_refl_by8.lo crc/crc32_gzip_refl_by8_02.lo \
	crc/crc32_gzip_refl_by16_10.lo igzip/igzip_body.lo \
	igzip/igzip_finish.lo igzip/igzip_icf_body_h1_gr_bt.lo \
	igzip/igzip_icf_finish.lo igzip/rfc1951_lookup.lo \
	igzip/adler32_sse.lo igzip/adler32_avx2_4.lo \
	igzip/igzip_multibinary.lo igzip/igzip_update_histogram_01.lo \
	igzip/igzip_update_histogram_04.lo \
	igzip/igzip_decode_block_stateless_01.lo \
	igzip/igzip_decode_block_stateless_04.lo \
	igzip/igzip_inflate_multibinary.lo igzip/encode_df_04.lo \
	igzip/encode_df_06.lo igzip/proc_heap.lo \
	igzip/igzip_deflate_hash.lo igzip/igzip_gen_icf_map_lh1_06.lo \
	igzip/igzip_gen_icf_map_lh1_04.lo \
	igzip/igzip_set_long_icf_fg_04.lo \
	igzip/igzip_set_long_icf_fg_06.lo mem/mem_zero_detect_avx.lo \
	mem/mem_zero_detect_sse.lo mem/mem_multibinary.lo
am__objects_3 = $(am__objects_2)
am__objects_4 = erasure_code/ec_highlevel_func.lo \
	erasure_code/ec_multibinary.lo \
	erasure_code/gf_vect_dot_prod_avx.lo \
	erasure_code/gf_2vect_dot_prod_avx.lo \
	erasure_code/gf_3vect_dot_prod_avx.lo \
	erasure_code/gf_4vect_dot_prod_avx.lo \
	erasure_code/gf_vect_dot_prod_sse.lo \
	erasure_code/gf_2vect_dot_prod_sse.lo \
	erasure_code/gf_3vect_dot_prod_sse.lo \
	erasure_code/gf_4vect_dot_prod_sse.lo \
	erasure_code/gf_vect_dot_prod_avx2.lo \
	erasure_code/gf_2vect_dot_prod_avx2.lo \
	erasure_code/gf_3vect_dot_prod_avx2.lo \
	erasure_code/gf_4vect_dot_prod_avx2.lo raid/xor_gen_sse.lo \
	raid/pq_gen_sse_i32.lo raid/xor_check_sse.lo \
	raid/pq_check_sse_i32.lo raid/raid_multibinary_i32.lo \
	crc/crc_base_aliases.lo igzip/igzip_base_aliases.lo \
	igzip/proc_heap_base.lo
#am__objects_5 = $(am__objects_4)
am__objects_6 = erasure_code/aarch64/ec_aarch64_highlevel_func.lo \
	erasure_code/aarch64/ec_aarch64_dispatcher.lo \
	erasure_code/aarch64/gf_vect_dot_prod_neon.lo \
	erasure_code/aarch64/gf_2vect_dot_prod_neon.lo \
	erasure_code/aarch64/gf_3vect_dot_prod_neon.lo \
	erasure_code/aarch64/gf_4vect_dot_prod_neon.lo \
	erasure_code/aarch64/gf_5vect_dot_prod_neon.lo \
	erasure_code/aarch64/gf_vect_mad_neon.lo \
	erasure_code/aarch64/gf_2vect_mad_neon.lo \
	erasure_code/aarch64/gf_3vect_mad_neon.lo \
	erasure_code/aarch64/gf_4vect_mad_neon.lo \
	erasure_code/aarch64/gf_5vect_mad_neon.lo \
	erasure_code/aarch64/gf_6vect_mad_neon.lo \
	erasure_code/aarch64/gf_vect_mul_neon.lo \
	erasure_code/aarch64/ec_multibinary_arm.lo \
	raid/aarch64/xor_gen_neon.lo raid/aarch64/pq_gen_neon.lo \
	raid/aarch64/xor_check_neon.lo raid/aarch64/pq_check_neon.lo \
	raid/aarch64/raid_multibinary_arm.lo \
	raid/aarch64/raid_aarch64_dispatcher.lo \
	crc/aarch64/crc_multibinary_arm.lo \
	crc/aarch64/crc_aarch64_dispatcher.lo \
	crc/aarch64/crc16_t10dif_pmull.lo \
	crc/aarch64/crc16_t10dif_copy_pmull.lo \
	crc/aarch64/crc32_ieee_norm_pmull.lo \
	crc/aarch64/crc64_ecma_refl_pmull.lo \
	crc/aarch64/crc64_ecma_norm_pmull.lo \
	crc/aarch64/crc64_iso_refl_pmull.lo \
	crc/aarch64/crc64_iso_norm_pmull.lo \
	crc/aarch64/crc64_jones_refl_pmull.lo \
	crc/aarch64/crc64_jones_norm_pmull.lo \
	crc/aarch64/crc32_iscsi_refl_pmull.lo \
	crc/aarch64/crc32_gzip_refl_pmull.lo \
	crc/aarch64/crc32_iscsi_3crc_fold.lo \
	crc/aarch64/crc32_gzip_refl_3crc_fold.lo \
	crc/aarch64/crc32_iscsi_crc_ext.lo \
	crc/aarch64/crc32_gzip_refl_crc_ext.lo \
	crc/aarch64/crc32_mix_default.lo \
	crc/aarch64/crc32c_mix_default.lo \
	crc/aarch64/crc32_mix_neoverse_n1.lo \
	crc/aarch64/crc32c_mix_neoverse_n1.lo \
	igzip/aarch64/igzip_inflate_multibinary_arm64.lo \
	igzip/aarch64/igzip_multibinary_arm64.lo \
	igzip/aarch64/igzip_isal_adler32_neon.lo \
	igzip/aarch64/igzip_multibinary_aarch64_dispatcher.lo \
	igzip/aarch64/igzip_deflate_body_aarch64.lo \
	igzip/aarch64/igzip_deflate_finish_aarch64.lo \
	igzip/aarch64/isal_deflate_icf_body_hash_hist.lo \
	igzip/aarch64/isal_deflate_icf_finish_hash_hist.lo \
	igzip/aarch64/igzip_set_long_icf_fg.lo \
	igzip/aarch64/encode_df.lo \
	igzip/aarch64/isal_update_histogram.lo \
	igzip/aarch64/gen_icf_map.lo \
	igzip/aarch64/igzip_deflate_hash_aarch64.lo \
	igzip/aarch64/igzip_decode_huffman_code_block_aarch64.lo \
	igzip/proc_heap_base.lo mem/aarch64/mem_zero_detect_neon.lo \
	mem/aarch64/mem_multibinary_arm.lo \
	mem/aarch64/mem_aarch64_dispatcher.lo
#am__objects_7 = $(am__objects_6)
am__objects_8 = erasure_code/ppc64le/ec_base_vsx.lo \
	erasure_code/ppc64le/gf_vect_mul_vsx.lo \
	erasure_code/ppc64le/gf_vect_dot_prod_vsx.lo \
	erasure_code/ppc64le/gf_vect_mad_vsx.lo \
	erasure_code/ppc64le/gf_2vect_dot_prod_vsx.lo \
	erasure_code/ppc64le/gf_2vect_mad_vsx.lo \
	erasure_code/ppc64le/gf_3vect_dot_prod_vsx.lo \
	erasure_code/ppc64le/gf_3vect_mad_vsx.lo \
	erasure_code/ppc64le/gf_4vect_dot_prod_vsx.lo \
	erasure_code/ppc64le/gf_4vect_mad_vsx.lo \
	erasure_code/ppc64le/gf_5vect_dot_prod_vsx.lo \
	erasure_code/ppc64le/gf_5vect_mad_vsx.lo \
	erasure_code/ppc64le/gf_6vect_dot_prod_vsx.lo \
	erasure_code/ppc64le/gf_6vect_mad_vsx.lo \
	raid/raid_base_aliases.lo crc/crc_base_aliases.lo \
	igzip/igzip_base_aliases.lo igzip/proc_heap_base.lo \
	mem/mem_zero_detect_base_aliases.lo
#am__objects_9 = $(am__objects_8)
am__objects_10 = erasure_code/ec_base_aliases.lo \
	raid/raid_base_aliases.lo crc/crc_base_aliases.lo \
	igzip/igzip_base_aliases.lo igzip/proc_heap_base.lo \
	mem/mem_zero_detect_base_aliases.lo
#am__objects_11 = $(am__objects_10)
am_libisal_la_OBJECTS = $(am__objects_1) $(am__objects_3) \
	$(am__objects_5) $(am__objects_7) $(am__objects_9) \
	$(am__objects_11)
libisal_la_OBJECTS = $(am_libisal_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libisal_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libisal_la_LDFLAGS) $(LDFLAGS) -o $@
am__EXEEXT_1 = erasure_code/gf_vect_mul_base_test$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_base_test$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_test$(EXEEXT) \
	erasure_code/gf_vect_mad_test$(EXEEXT) \
	erasure_code/erasure_code_base_test$(EXEEXT)
am__EXEEXT_2 = erasure_code/gf_vect_mul_perf$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_perf$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_1tbl$(EXEEXT) \
	erasure_code/erasure_code_perf$(EXEEXT) \
	erasure_code/erasure_code_base_perf$(EXEEXT) \
	erasure_code/erasure_code_update_perf$(EXEEXT) \
	raid/xor_gen_perf$(EXEEXT) raid/pq_gen_perf$(EXEEXT) \
	crc/crc16_t10dif_perf$(EXEEXT) \
	crc/crc16_t10dif_copy_perf$(EXEEXT) \
	crc/crc16_t10dif_op_perf$(EXEEXT) crc/crc32_ieee_perf$(EXEEXT) \
	crc/crc32_iscsi_perf$(EXEEXT) crc/crc64_funcs_perf$(EXEEXT) \
	crc/crc32_gzip_refl_perf$(EXEEXT) igzip/adler32_perf$(EXEEXT) \
	mem/mem_zero_detect_perf$(EXEEXT)
am__EXEEXT_3 =
am__EXEEXT_4 = $(am__EXEEXT_3)
#am__EXEEXT_5 = $(am__EXEEXT_3)
#am__EXEEXT_6 = $(am__EXEEXT_3)
#am__EXEEXT_7 = $(am__EXEEXT_3)
am__EXEEXT_8 = erasure_code/gen_rs_matrix_limits$(EXEEXT) \
	igzip/igzip_file_perf$(EXEEXT) igzip/igzip_hist_perf$(EXEEXT) \
	igzip/igzip_perf$(EXEEXT) \
	igzip/igzip_semi_dyn_file_perf$(EXEEXT) \
	igzip/igzip_build_hash_table_perf$(EXEEXT) \
	igzip/generate_custom_hufftables$(EXEEXT) \
	igzip/generate_static_inflate$(EXEEXT) \
	igzip/igzip_inflate_test$(EXEEXT) \
	tests/fuzz/igzip_fuzz_inflate$(EXEEXT) \
	tests/fuzz/igzip_dump_inflate_corpus$(EXEEXT) $(am__EXEEXT_4) \
	$(am__EXEEXT_5) $(am__EXEEXT_6) $(am__EXEEXT_7)
am__EXEEXT_9 = raid/xor_example$(EXEEXT) crc/crc_simple_test$(EXEEXT) \
	crc/crc64_example$(EXEEXT) igzip/igzip_example$(EXEEXT) \
	igzip/igzip_sync_flush_example$(EXEEXT) \
	examples/ec/ec_simple_example$(EXEEXT) \
	examples/ec/ec_piggyback_example$(EXEEXT)
am__EXEEXT_10 = erasure_code/gf_vect_mul_test$(EXEEXT) \
	erasure_code/erasure_code_test$(EXEEXT) \
	erasure_code/gf_inverse_test$(EXEEXT) \
	erasure_code/erasure_code_update_test$(EXEEXT) \
	raid/xor_gen_test$(EXEEXT) raid/pq_gen_test$(EXEEXT) \
	raid/xor_check_test$(EXEEXT) raid/pq_check_test$(EXEEXT) \
	crc/crc16_t10dif_test$(EXEEXT) \
	crc/crc16_t10dif_copy_test$(EXEEXT) \
	crc/crc64_funcs_test$(EXEEXT) crc/crc32_funcs_test$(EXEEXT) \
	igzip/igzip_rand_test$(EXEEXT) \
	igzip/igzip_wrapper_hdr_test$(EXEEXT) \
	igzip/checksum32_funcs_test$(EXEEXT) \
	mem/mem_zero_detect_test$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
crc_crc16_t10dif_copy_perf_SOURCES = crc/crc16_t10dif_copy_perf.c
crc_crc16_t10dif_copy_perf_OBJECTS =  \
	crc/crc16_t10dif_copy_perf.$(OBJEXT)
crc_crc16_t10dif_copy_perf_LDADD = $(LDADD)
crc_crc16_t10dif_copy_perf_DEPENDENCIES = libisal.la
crc_crc16_t10dif_copy_test_SOURCES = crc/crc16_t10dif_copy_test.c
crc_crc16_t10dif_copy_test_OBJECTS =  \
	crc/crc16_t10dif_copy_test.$(OBJEXT)
crc_crc16_t10dif_copy_test_LDADD = $(LDADD)
crc_crc16_t10dif_copy_test_DEPENDENCIES = libisal.la
crc_crc16_t10dif_op_perf_SOURCES = crc/crc16_t10dif_op_perf.c
crc_crc16_t10dif_op_perf_OBJECTS = crc/crc16_t10dif_op_perf.$(OBJEXT)
crc_crc16_t10dif_op_perf_LDADD = $(LDADD)
crc_crc16_t10dif_op_perf_DEPENDENCIES = libisal.la
crc_crc16_t10dif_perf_SOURCES = crc/crc16_t10dif_perf.c
crc_crc16_t10dif_perf_OBJECTS = crc/crc16_t10dif_perf.$(OBJEXT)
crc_crc16_t10dif_perf_LDADD = $(LDADD)
crc_crc16_t10dif_perf_DEPENDENCIES = libisal.la
crc_crc16_t10dif_test_SOURCES = crc/crc16_t10dif_test.c
crc_crc16_t10dif_test_OBJECTS = crc/crc16_t10dif_test.$(OBJEXT)
crc_crc16_t10dif_test_LDADD = $(LDADD)
crc_crc16_t10dif_test_DEPENDENCIES = libisal.la
crc_crc32_funcs_test_SOURCES = crc/crc32_funcs_test.c
crc_crc32_funcs_test_OBJECTS = crc/crc32_funcs_test.$(OBJEXT)
crc_crc32_funcs_test_LDADD = $(LDADD)
crc_crc32_funcs_test_DEPENDENCIES = libisal.la
crc_crc32_gzip_refl_perf_SOURCES = crc/crc32_gzip_refl_perf.c
crc_crc32_gzip_refl_perf_OBJECTS = crc/crc32_gzip_refl_perf.$(OBJEXT)
crc_crc32_gzip_refl_perf_LDADD = $(LDADD)
crc_crc32_gzip_refl_perf_DEPENDENCIES = libisal.la
crc_crc32_ieee_perf_SOURCES = crc/crc32_ieee_perf.c
crc_crc32_ieee_perf_OBJECTS = crc/crc32_ieee_perf.$(OBJEXT)
crc_crc32_ieee_perf_LDADD = $(LDADD)
crc_crc32_ieee_perf_DEPENDENCIES = libisal.la
crc_crc32_iscsi_perf_SOURCES = crc/crc32_iscsi_perf.c
crc_crc32_iscsi_perf_OBJECTS = crc/crc32_iscsi_perf.$(OBJEXT)
crc_crc32_iscsi_perf_LDADD = $(LDADD)
crc_crc32_iscsi_perf_DEPENDENCIES = libisal.la
crc_crc64_example_SOURCES = crc/crc64_example.c
crc_crc64_example_OBJECTS = crc/crc64_example.$(OBJEXT)
crc_crc64_example_LDADD = $(LDADD)
crc_crc64_example_DEPENDENCIES = libisal.la
crc_crc64_funcs_perf_SOURCES = crc/crc64_funcs_perf.c
crc_crc64_funcs_perf_OBJECTS = crc/crc64_funcs_perf.$(OBJEXT)
crc_crc64_funcs_perf_LDADD = $(LDADD)
crc_crc64_funcs_perf_DEPENDENCIES = libisal.la
crc_crc64_funcs_test_SOURCES = crc/crc64_funcs_test.c
crc_crc64_funcs_test_OBJECTS = crc/crc64_funcs_test.$(OBJEXT)
crc_crc64_funcs_test_LDADD = $(LDADD)
crc_crc64_funcs_test_DEPENDENCIES = libisal.la
crc_crc_simple_test_SOURCES = crc/crc_simple_test.c
crc_crc_simple_test_OBJECTS = crc/crc_simple_test.$(OBJEXT)
crc_crc_simple_test_LDADD = $(LDADD)
crc_crc_simple_test_DEPENDENCIES = libisal.la
erasure_code_erasure_code_base_perf_SOURCES =  \
	erasure_code/erasure_code_base_perf.c
erasure_code_erasure_code_base_perf_OBJECTS =  \
	erasure_code/erasure_code_base_perf.$(OBJEXT)
erasure_code_erasure_code_base_perf_LDADD = $(LDADD)
erasure_code_erasure_code_base_perf_DEPENDENCIES = libisal.la
erasure_code_erasure_code_base_test_SOURCES =  \
	erasure_code/erasure_code_base_test.c
erasure_code_erasure_code_base_test_OBJECTS =  \
	erasure_code/erasure_code_base_test.$(OBJEXT)
erasure_code_erasure_code_base_test_LDADD = $(LDADD)
erasure_code_erasure_code_base_test_DEPENDENCIES = libisal.la
erasure_code_erasure_code_perf_SOURCES =  \
	erasure_code/erasure_code_perf.c
erasure_code_erasure_code_perf_OBJECTS =  \
	erasure_code/erasure_code_perf.$(OBJEXT)
erasure_code_erasure_code_perf_LDADD = $(LDADD)
erasure_code_erasure_code_perf_DEPENDENCIES = libisal.la
erasure_code_erasure_code_test_SOURCES =  \
	erasure_code/erasure_code_test.c
erasure_code_erasure_code_test_OBJECTS =  \
	erasure_code/erasure_code_test.$(OBJEXT)
erasure_code_erasure_code_test_LDADD = $(LDADD)
erasure_code_erasure_code_test_DEPENDENCIES = libisal.la
erasure_code_erasure_code_update_perf_SOURCES =  \
	erasure_code/erasure_code_update_perf.c
erasure_code_erasure_code_update_perf_OBJECTS =  \
	erasure_code/erasure_code_update_perf.$(OBJEXT)
erasure_code_erasure_code_update_perf_LDADD = $(LDADD)
erasure_code_erasure_code_update_perf_DEPENDENCIES = libisal.la
erasure_code_erasure_code_update_test_SOURCES =  \
	erasure_code/erasure_code_update_test.c
erasure_code_erasure_code_update_test_OBJECTS =  \
	erasure_code/erasure_code_update_test.$(OBJEXT)
erasure_code_erasure_code_update_test_LDADD = $(LDADD)
erasure_code_erasure_code_update_test_DEPENDENCIES = libisal.la
erasure_code_gen_rs_matrix_limits_SOURCES =  \
	erasure_code/gen_rs_matrix_limits.c
erasure_code_gen_rs_matrix_limits_OBJECTS =  \
	erasure_code/gen_rs_matrix_limits.$(OBJEXT)
erasure_code_gen_rs_matrix_limits_LDADD = $(LDADD)
erasure_code_gen_rs_matrix_limits_DEPENDENCIES = libisal.la
erasure_code_gf_inverse_test_SOURCES = erasure_code/gf_inverse_test.c
erasure_code_gf_inverse_test_OBJECTS =  \
	erasure_code/gf_inverse_test.$(OBJEXT)
erasure_code_gf_inverse_test_LDADD = $(LDADD)
erasure_code_gf_inverse_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_1tbl_SOURCES =  \
	erasure_code/gf_vect_dot_prod_1tbl.c
erasure_code_gf_vect_dot_prod_1tbl_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_1tbl.$(OBJEXT)
erasure_code_gf_vect_dot_prod_1tbl_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_1tbl_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_base_test_SOURCES =  \
	erasure_code/gf_vect_dot_prod_base_test.c
erasure_code_gf_vect_dot_prod_base_test_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_base_test.$(OBJEXT)
erasure_code_gf_vect_dot_prod_base_test_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_base_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_perf_SOURCES =  \
	erasure_code/gf_vect_dot_prod_perf.c
erasure_code_gf_vect_dot_prod_perf_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_perf.$(OBJEXT)
erasure_code_gf_vect_dot_prod_perf_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_perf_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_test_SOURCES =  \
	erasure_code/gf_vect_dot_prod_test.c
erasure_code_gf_vect_dot_prod_test_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_test.$(OBJEXT)
erasure_code_gf_vect_dot_prod_test_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mad_test_SOURCES =  \
	erasure_code/gf_vect_mad_test.c
erasure_code_gf_vect_mad_test_OBJECTS =  \
	erasure_code/gf_vect_mad_test.$(OBJEXT)
erasure_code_gf_vect_mad_test_LDADD = $(LDADD)
erasure_code_gf_vect_mad_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mul_base_test_SOURCES =  \
	erasure_code/gf_vect_mul_base_test.c
erasure_code_gf_vect_mul_base_test_OBJECTS =  \
	erasure_code/gf_vect_mul_base_test.$(OBJEXT)
erasure_code_gf_vect_mul_base_test_LDADD = $(LDADD)
erasure_code_gf_vect_mul_base_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mul_perf_SOURCES =  \
	erasure_code/gf_vect_mul_perf.c
erasure_code_gf_vect_mul_perf_OBJECTS =  \
	erasure_code/gf_vect_mul_perf.$(OBJEXT)
erasure_code_gf_vect_mul_perf_LDADD = $(LDADD)
erasure_code_gf_vect_mul_perf_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mul_test_SOURCES =  \
	erasure_code/gf_vect_mul_test.c
erasure_code_gf_vect_mul_test_OBJECTS =  \
	erasure_code/gf_vect_mul_test.$(OBJEXT)
erasure_code_gf_vect_mul_test_LDADD = $(LDADD)
erasure_code_gf_vect_mul_test_DEPENDENCIES = libisal.la
examples_ec_ec_piggyback_example_SOURCES =  \
	examples/ec/ec_piggyback_example.c
examples_ec_ec_piggyback_example_OBJECTS =  \
	examples/ec/ec_piggyback_example.$(OBJEXT)
examples_ec_ec_piggyback_example_LDADD = $(LDADD)
examples_ec_ec_piggyback_example_DEPENDENCIES = libisal.la
examples_ec_ec_simple_example_SOURCES =  \
	examples/ec/ec_simple_example.c
examples_ec_ec_simple_example_OBJECTS =  \
	examples/ec/ec_simple_example.$(OBJEXT)
examples_ec_ec_simple_example_LDADD = $(LDADD)
examples_ec_ec_simple_example_DEPENDENCIES = libisal.la
igzip_adler32_perf_SOURCES = igzip/adler32_perf.c
igzip_adler32_perf_OBJECTS = igzip/adler32_perf.$(OBJEXT)
igzip_adler32_perf_LDADD = $(LDADD)
igzip_adler32_perf_DEPENDENCIES = libisal.la
igzip_checksum32_funcs_test_SOURCES = igzip/checksum32_funcs_test.c
igzip_checksum32_funcs_test_OBJECTS =  \
	igzip/checksum32_funcs_test.$(OBJEXT)
igzip_checksum32_funcs_test_LDADD = $(LDADD)
igzip_checksum32_funcs_test_DEPENDENCIES = libisal.la
igzip_generate_custom_hufftables_SOURCES =  \
	igzip/generate_custom_hufftables.c
igzip_generate_custom_hufftables_OBJECTS =  \
	igzip/generate_custom_hufftables.$(OBJEXT)
igzip_generate_custom_hufftables_LDADD = $(LDADD)
igzip_generate_custom_hufftables_DEPENDENCIES = libisal.la
igzip_generate_static_inflate_SOURCES =  \
	igzip/generate_static_inflate.c
igzip_generate_static_inflate_OBJECTS =  \
	igzip/generate_static_inflate.$(OBJEXT)
igzip_generate_static_inflate_LDADD = $(LDADD)
igzip_generate_static_inflate_DEPENDENCIES = libisal.la
igzip_igzip_build_hash_table_perf_SOURCES =  \
	igzip/igzip_build_hash_table_perf.c
igzip_igzip_build_hash_table_perf_OBJECTS =  \
	igzip/igzip_build_hash_table_perf.$(OBJEXT)
igzip_igzip_build_hash_table_perf_LDADD = $(LDADD)
igzip_igzip_build_hash_table_perf_DEPENDENCIES = libisal.la
igzip_igzip_example_SOURCES = igzip/igzip_example.c
igzip_igzip_example_OBJECTS = igzip/igzip_example.$(OBJEXT)
igzip_igzip_example_LDADD = $(LDADD)
igzip_igzip_example_DEPENDENCIES = libisal.la
igzip_igzip_file_perf_SOURCES = igzip/igzip_file_perf.c
igzip_igzip_file_perf_OBJECTS = igzip/igzip_file_perf.$(OBJEXT)
igzip_igzip_file_perf_LDADD = $(LDADD)
igzip_igzip_file_perf_DEPENDENCIES = libisal.la
igzip_igzip_hist_perf_SOURCES = igzip/igzip_hist_perf.c
igzip_igzip_hist_perf_OBJECTS = igzip/igzip_hist_perf.$(OBJEXT)
igzip_igzip_hist_perf_DEPENDENCIES = libisal.la
igzip_igzip_inflate_test_SOURCES = igzip/igzip_inflate_test.c
igzip_igzip_inflate_test_OBJECTS = igzip/igzip_inflate_test.$(OBJEXT)
igzip_igzip_inflate_test_DEPENDENCIES = libisal.la
igzip_igzip_inflate_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(igzip_igzip_inflate_test_LDFLAGS) \
	$(LDFLAGS) -o $@
igzip_igzip_perf_SOURCES = igzip/igzip_perf.c
igzip_igzip_perf_OBJECTS = igzip/igzip_perf.$(OBJEXT)
igzip_igzip_perf_DEPENDENCIES = libisal.la
igzip_igzip_perf_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(igzip_igzip_perf_LDFLAGS) $(LDFLAGS) \
	-o $@
igzip_igzip_rand_test_SOURCES = igzip/igzip_rand_test.c
igzip_igzip_rand_test_OBJECTS = igzip/igzip_rand_test.$(OBJEXT)
igzip_igzip_rand_test_DEPENDENCIES = libisal.la
igzip_igzip_semi_dyn_file_perf_SOURCES =  \
	igzip/igzip_semi_dyn_file_perf.c
igzip_igzip_semi_dyn_file_perf_OBJECTS =  \
	igzip/igzip_semi_dyn_file_perf.$(OBJEXT)
igzip_igzip_semi_dyn_file_perf_LDADD = $(LDADD)
igzip_igzip_semi_dyn_file_perf_DEPENDENCIES = libisal.la
igzip_igzip_sync_flush_example_SOURCES =  \
	igzip/igzip_sync_flush_example.c
igzip_igzip_sync_flush_example_OBJECTS =  \
	igzip/igzip_sync_flush_example.$(OBJEXT)
igzip_igzip_sync_flush_example_LDADD = $(LDADD)
igzip_igzip_sync_flush_example_DEPENDENCIES = libisal.la
igzip_igzip_wrapper_hdr_test_SOURCES = igzip/igzip_wrapper_hdr_test.c
igzip_igzip_wrapper_hdr_test_OBJECTS =  \
	igzip/igzip_wrapper_hdr_test.$(OBJEXT)
igzip_igzip_wrapper_hdr_test_LDADD = $(LDADD)
igzip_igzip_wrapper_hdr_test_DEPENDENCIES = libisal.la
mem_mem_zero_detect_perf_SOURCES = mem/mem_zero_detect_perf.c
mem_mem_zero_detect_perf_OBJECTS = mem/mem_zero_detect_perf.$(OBJEXT)
mem_mem_zero_detect_perf_LDADD = $(LDADD)
mem_mem_zero_detect_perf_DEPENDENCIES = libisal.la
mem_mem_zero_detect_test_SOURCES = mem/mem_zero_detect_test.c
mem_mem_zero_detect_test_OBJECTS = mem/mem_zero_detect_test.$(OBJEXT)
mem_mem_zero_detect_test_LDADD = $(LDADD)
mem_mem_zero_detect_test_DEPENDENCIES = libisal.la
am_programs_igzip_OBJECTS = programs/igzip_cli.$(OBJEXT)
programs_igzip_OBJECTS = $(am_programs_igzip_OBJECTS)
programs_igzip_DEPENDENCIES = libisal.la
raid_pq_check_test_SOURCES = raid/pq_check_test.c
raid_pq_check_test_OBJECTS = raid/pq_check_test.$(OBJEXT)
raid_pq_check_test_LDADD = $(LDADD)
raid_pq_check_test_DEPENDENCIES = libisal.la
raid_pq_gen_perf_SOURCES = raid/pq_gen_perf.c
raid_pq_gen_perf_OBJECTS = raid/pq_gen_perf.$(OBJEXT)
raid_pq_gen_perf_LDADD = $(LDADD)
raid_pq_gen_perf_DEPENDENCIES = libisal.la
raid_pq_gen_test_SOURCES = raid/pq_gen_test.c
raid_pq_gen_test_OBJECTS = raid/pq_gen_test.$(OBJEXT)
raid_pq_gen_test_LDADD = $(LDADD)
raid_pq_gen_test_DEPENDENCIES = libisal.la
raid_xor_check_test_SOURCES = raid/xor_check_test.c
raid_xor_check_test_OBJECTS = raid/xor_check_test.$(OBJEXT)
raid_xor_check_test_LDADD = $(LDADD)
raid_xor_check_test_DEPENDENCIES = libisal.la
raid_xor_example_SOURCES = raid/xor_example.c
raid_xor_example_OBJECTS = raid/xor_example.$(OBJEXT)
raid_xor_example_LDADD = $(LDADD)
raid_xor_example_DEPENDENCIES = libisal.la
raid_xor_gen_perf_SOURCES = raid/xor_gen_perf.c
raid_xor_gen_perf_OBJECTS = raid/xor_gen_perf.$(OBJEXT)
raid_xor_gen_perf_LDADD = $(LDADD)
raid_xor_gen_perf_DEPENDENCIES = libisal.la
raid_xor_gen_test_SOURCES = raid/xor_gen_test.c
raid_xor_gen_test_OBJECTS = raid/xor_gen_test.$(OBJEXT)
raid_xor_gen_test_LDADD = $(LDADD)
raid_xor_gen_test_DEPENDENCIES = libisal.la
tests_fuzz_igzip_dump_inflate_corpus_SOURCES =  \
	tests/fuzz/igzip_dump_inflate_corpus.c
tests_fuzz_igzip_dump_inflate_corpus_OBJECTS =  \
	tests/fuzz/igzip_dump_inflate_corpus.$(OBJEXT)
tests_fuzz_igzip_dump_inflate_corpus_DEPENDENCIES = libisal.la
tests_fuzz_igzip_fuzz_inflate_SOURCES =  \
	tests/fuzz/igzip_fuzz_inflate.c
tests_fuzz_igzip_fuzz_inflate_OBJECTS =  \
	tests/fuzz/igzip_fuzz_inflate.$(OBJEXT)
tests_fuzz_igzip_fuzz_inflate_DEPENDENCIES =  \
	tests/fuzz/igzip_checked_inflate_fuzz_test.o libisal.la
tests_fuzz_igzip_fuzz_inflate_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(tests_fuzz_igzip_fuzz_inflate_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCPPASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CCASFLAGS) $(CCASFLAGS)
AM_V_CPPAS = $(am__v_CPPAS_$(V))
am__v_CPPAS_ = $(am__v_CPPAS_$(AM_DEFAULT_VERBOSITY))
am__v_CPPAS_0 = @echo "  CPPAS   " $@;
am__v_CPPAS_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCCASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(AM_CCASFLAGS) \
	$(CCASFLAGS)
AM_V_CCAS = $(am__v_CCAS_$(V))
am__v_CCAS_ = $(am__v_CCAS_$(AM_DEFAULT_VERBOSITY))
am__v_CCAS_0 = @echo "  CCAS    " $@;
am__v_CCAS_1 = 
SOURCES = $(libisal_la_SOURCES) crc/crc16_t10dif_copy_perf.c \
	crc/crc16_t10dif_copy_test.c crc/crc16_t10dif_op_perf.c \
	crc/crc16_t10dif_perf.c crc/crc16_t10dif_test.c \
	crc/crc32_funcs_test.c crc/crc32_gzip_refl_perf.c \
	crc/crc32_ieee_perf.c crc/crc32_iscsi_perf.c \
	crc/crc64_example.c crc/crc64_funcs_perf.c \
	crc/crc64_funcs_test.c crc/crc_simple_test.c \
	erasure_code/erasure_code_base_perf.c \
	erasure_code/erasure_code_base_test.c \
	erasure_code/erasure_code_perf.c \
	erasure_code/erasure_code_test.c \
	erasure_code/erasure_code_update_perf.c \
	erasure_code/erasure_code_update_test.c \
	erasure_code/gen_rs_matrix_limits.c \
	erasure_code/gf_inverse_test.c \
	erasure_code/gf_vect_dot_prod_1tbl.c \
	erasure_code/gf_vect_dot_prod_base_test.c \
	erasure_code/gf_vect_dot_prod_perf.c \
	erasure_code/gf_vect_dot_prod_test.c \
	erasure_code/gf_vect_mad_test.c \
	erasure_code/gf_vect_mul_base_test.c \
	erasure_code/gf_vect_mul_perf.c \
	erasure_code/gf_vect_mul_test.c \
	examples/ec/ec_piggyback_example.c \
	examples/ec/ec_simple_example.c igzip/adler32_perf.c \
	igzip/checksum32_funcs_test.c \
	igzip/generate_custom_hufftables.c \
	igzip/generate_static_inflate.c \
	igzip/igzip_build_hash_table_perf.c igzip/igzip_example.c \
	igzip/igzip_file_perf.c igzip/igzip_hist_perf.c \
	igzip/igzip_inflate_test.c igzip/igzip_perf.c \
	igzip/igzip_rand_test.c igzip/igzip_semi_dyn_file_perf.c \
	igzip/igzip_sync_flush_example.c \
	igzip/igzip_wrapper_hdr_test.c mem/mem_zero_detect_perf.c \
	mem/mem_zero_detect_test.c $(programs_igzip_SOURCES) \
	raid/pq_check_test.c raid/pq_gen_perf.c raid/pq_gen_test.c \
	raid/xor_check_test.c raid/xor_example.c raid/xor_gen_perf.c \
	raid/xor_gen_test.c tests/fuzz/igzip_dump_inflate_corpus.c \
	tests/fuzz/igzip_fuzz_inflate.c
DIST_SOURCES = $(am__libisal_la_SOURCES_DIST) \
	crc/crc16_t10dif_copy_perf.c crc/crc16_t10dif_copy_test.c \
	crc/crc16_t10dif_op_perf.c crc/crc16_t10dif_perf.c \
	crc/crc16_t10dif_test.c crc/crc32_funcs_test.c \
	crc/crc32_gzip_refl_perf.c crc/crc32_ieee_perf.c \
	crc/crc32_iscsi_perf.c crc/crc64_example.c \
	crc/crc64_funcs_perf.c crc/crc64_funcs_test.c \
	crc/crc_simple_test.c erasure_code/erasure_code_base_perf.c \
	erasure_code/erasure_code_base_test.c \
	erasure_code/erasure_code_perf.c \
	erasure_code/erasure_code_test.c \
	erasure_code/erasure_code_update_perf.c \
	erasure_code/erasure_code_update_test.c \
	erasure_code/gen_rs_matrix_limits.c \
	erasure_code/gf_inverse_test.c \
	erasure_code/gf_vect_dot_prod_1tbl.c \
	erasure_code/gf_vect_dot_prod_base_test.c \
	erasure_code/gf_vect_dot_prod_perf.c \
	erasure_code/gf_vect_dot_prod_test.c \
	erasure_code/gf_vect_mad_test.c \
	erasure_code/gf_vect_mul_base_test.c \
	erasure_code/gf_vect_mul_perf.c \
	erasure_code/gf_vect_mul_test.c \
	examples/ec/ec_piggyback_example.c \
	examples/ec/ec_simple_example.c igzip/adler32_perf.c \
	igzip/checksum32_funcs_test.c \
	igzip/generate_custom_hufftables.c \
	igzip/generate_static_inflate.c \
	igzip/igzip_build_hash_table_perf.c igzip/igzip_example.c \
	igzip/igzip_file_perf.c igzip/igzip_hist_perf.c \
	igzip/igzip_inflate_test.c igzip/igzip_perf.c \
	igzip/igzip_rand_test.c igzip/igzip_semi_dyn_file_perf.c \
	igzip/igzip_sync_flush_example.c \
	igzip/igzip_wrapper_hdr_test.c mem/mem_zero_detect_perf.c \
	mem/mem_zero_detect_test.c $(programs_igzip_SOURCES) \
	raid/pq_check_test.c raid/pq_gen_perf.c raid/pq_gen_test.c \
	raid/xor_check_test.c raid/xor_example.c raid/xor_gen_perf.c \
	raid/xor_gen_test.c tests/fuzz/igzip_dump_inflate_corpus.c \
	tests/fuzz/igzip_fuzz_inflate.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(dist_man_MANS)
DATA = $(pkgconfig_DATA)
HEADERS = $(nobase_include_HEADERS) $(noinst_HEADERS) \
	$(pkginclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
GZIP_ENV = --best
DIST_ARCHIVES = $(distdir).tar.xz
DIST_TARGETS = dist-xz
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/hadoop/isa-l/build-aux/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/hadoop/isa-l/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/hadoop/isa-l/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/hadoop/isa-l/build-aux/missing automake-1.13
AWK = gawk
CC = gcc -std=gnu99
CCAS = $(as_filter)
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -std=gnu99 -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"libisal\" -DPACKAGE_TARNAME=\"isa-l\" -DPACKAGE_VERSION=\"2.30.0\" -DPACKAGE_STRING=\"libisal\ 2.30.0\" -DPACKAGE_BUGREPORT=\"sg.support.isal@intel.com\" -DPACKAGE_URL=\"http://01.org/storage-acceleration-library\" -DPACKAGE=\"isa-l\" -DVERSION=\"2.30.0\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DAS_FEATURE_LEVEL=10 -DHAVE_AS_KNOWS_AVX512=1 -DHAVE_LIMITS_H=1 -DHAVE_STDINT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_STDLIB_H=1 -DHAVE_MALLOC=1 -DHAVE_MEMMOVE=1 -DHAVE_MEMSET=1 -DHAVE_GETOPT=1
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_AS = 
HAVE_NASM = yes
HAVE_YASM = yes
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/hadoop/isa-l/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = isa-l
PACKAGE_BUGREPORT = sg.support.isal@intel.com
PACKAGE_NAME = libisal
PACKAGE_STRING = libisal 2.30.0
PACKAGE_TARNAME = isa-l
PACKAGE_URL = http://01.org/storage-acceleration-library
PACKAGE_VERSION = 2.30.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 2.30.0
abs_builddir = /home/hadoop/isa-l
abs_srcdir = /home/hadoop/isa-l
abs_top_builddir = /home/hadoop/isa-l
abs_top_srcdir = /home/hadoop/isa-l
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/hadoop/isa-l/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
my_CFLAGS = -Wall -Wchar-subscripts -Wformat-security -Wnested-externs -Wpointer-arith -Wshadow -Wstrict-prototypes -Wtype-limits 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
yasm_args = -f elf64
EXTRA_DIST = autogen.sh Makefile.unx make.inc Makefile.nmake isa-l.def \
	LICENSE README.md Doxyfile CONTRIBUTING.md libisal.pc.in \
	${other_src} Release_notes.txt tools/yasm-filter.sh \
	tools/nasm-filter.sh tools/yasm-cet-filter.sh \
	tools/nasm-cet-filter.sh
CLEANFILES = libisal.pc ${EXTRA_PROGRAMS} isa-l.h

# For tests
LDADD = libisal.la
AM_MAKEFLAGS = --no-print-directory
noinst_HEADERS = 
pkginclude_HEADERS = include/test.h include/types.h $(sort \
	${extern_hdrs})
noinst_LTLIBRARIES = 
INCLUDE = -I $(srcdir)/include/
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libisal.pc
lsrc = erasure_code/ec_base.c raid/raid_base.c crc/crc_base.c \
	crc/crc64_base.c igzip/igzip.c igzip/hufftables_c.c \
	igzip/igzip_base.c igzip/igzip_icf_base.c igzip/adler32_base.c \
	igzip/flatten_ll.c igzip/encode_df.c igzip/igzip_icf_body.c \
	igzip/huff_codes.c igzip/igzip_inflate.c \
	mem/mem_zero_detect_base.c
src_include = -I $(srcdir)/erasure_code -I $(srcdir)/crc -I \
	$(srcdir)/igzip -I $(srcdir)/tests/fuzz -I \
	$(srcdir)/examples/ec
extern_hdrs = include/erasure_code.h include/gf_vect_mul.h \
	include/raid.h include/crc.h include/crc64.h \
	include/igzip_lib.h include/mem_routines.h
other_src = erasure_code/ec_base.h include/multibinary.asm \
	include/reg_sizes.asm include/test.h include/types.h \
	include/test.h include/types.h include/reg_sizes.asm \
	include/types.h include/test.h crc/crc_ref.h crc/crc64_ref.h \
	igzip/bitbuf2.asm igzip/data_struct2.asm \
	igzip/inflate_data_structs.asm igzip/igzip_body.asm \
	igzip/igzip_finish.asm igzip/lz0a_const.asm igzip/options.asm \
	igzip/stdmac.asm igzip/igzip_compare_types.asm igzip/bitbuf2.h \
	igzip/repeated_char_result.h igzip/igzip_update_histogram.asm \
	igzip/huffman.asm include/reg_sizes.asm \
	include/multibinary.asm include/test.h include/unaligned.h \
	igzip/huffman.h igzip/igzip_level_buf_structs.h \
	igzip/igzip_decode_block_stateless.asm \
	igzip/inflate_std_vects.h igzip/flatten_ll.h igzip/encode_df.h \
	igzip/heap_macros.asm igzip/igzip_wrapper.h \
	igzip/static_inflate.h igzip/igzip_checksums.h \
	igzip/huff_codes.h igzip/checksum_test_ref.h \
	tests/fuzz/igzip_simple_inflate_fuzz_test.c \
	tests/fuzz/igzip_checked_inflate_fuzz_test.c \
	tests/fuzz/igzip_simple_round_trip_fuzz_test.c \
	programs/igzip.1.h2m include/test.h include/types.h
check_tests = erasure_code/gf_vect_mul_test \
	erasure_code/erasure_code_test erasure_code/gf_inverse_test \
	erasure_code/erasure_code_update_test raid/xor_gen_test \
	raid/pq_gen_test raid/xor_check_test raid/pq_check_test \
	crc/crc16_t10dif_test crc/crc16_t10dif_copy_test \
	crc/crc64_funcs_test crc/crc32_funcs_test \
	igzip/igzip_rand_test igzip/igzip_wrapper_hdr_test \
	igzip/checksum32_funcs_test mem/mem_zero_detect_test
unit_tests = erasure_code/gf_vect_mul_base_test \
	erasure_code/gf_vect_dot_prod_base_test \
	erasure_code/gf_vect_dot_prod_test \
	erasure_code/gf_vect_mad_test \
	erasure_code/erasure_code_base_test
perf_tests = erasure_code/gf_vect_mul_perf \
	erasure_code/gf_vect_dot_prod_perf \
	erasure_code/gf_vect_dot_prod_1tbl \
	erasure_code/erasure_code_perf \
	erasure_code/erasure_code_base_perf \
	erasure_code/erasure_code_update_perf raid/xor_gen_perf \
	raid/pq_gen_perf crc/crc16_t10dif_perf \
	crc/crc16_t10dif_copy_perf crc/crc16_t10dif_op_perf \
	crc/crc32_ieee_perf crc/crc32_iscsi_perf crc/crc64_funcs_perf \
	crc/crc32_gzip_refl_perf igzip/adler32_perf \
	mem/mem_zero_detect_perf
unit_tests_extra = 
perf_tests_extra = 
examples = raid/xor_example crc/crc_simple_test crc/crc64_example \
	igzip/igzip_example igzip/igzip_sync_flush_example \
	examples/ec/ec_simple_example examples/ec/ec_piggyback_example

# Include tools to make custom Huffman tables based on sample data

# Include tools and tests using the reference inflate

# AFL fuzz tests
other_tests = erasure_code/gen_rs_matrix_limits igzip/igzip_file_perf \
	igzip/igzip_hist_perf igzip/igzip_perf \
	igzip/igzip_semi_dyn_file_perf \
	igzip/igzip_build_hash_table_perf \
	igzip/generate_custom_hufftables igzip/generate_static_inflate \
	igzip/igzip_inflate_test tests/fuzz/igzip_fuzz_inflate \
	tests/fuzz/igzip_dump_inflate_corpus $(am__append_2) \
	$(am__append_4) $(am__append_6) $(am__append_8)
other_tests_x86_64 = 
other_tests_x86_32 = 
other_tests_aarch64 = 
other_tests_ppc64le = 

#if HAVE_AVX512
lsrc_x86_64 = erasure_code/ec_highlevel_func.c \
	erasure_code/gf_vect_mul_sse.asm \
	erasure_code/gf_vect_mul_avx.asm \
	erasure_code/gf_vect_dot_prod_sse.asm \
	erasure_code/gf_vect_dot_prod_avx.asm \
	erasure_code/gf_vect_dot_prod_avx2.asm \
	erasure_code/gf_2vect_dot_prod_sse.asm \
	erasure_code/gf_3vect_dot_prod_sse.asm \
	erasure_code/gf_4vect_dot_prod_sse.asm \
	erasure_code/gf_5vect_dot_prod_sse.asm \
	erasure_code/gf_6vect_dot_prod_sse.asm \
	erasure_code/gf_2vect_dot_prod_avx.asm \
	erasure_code/gf_3vect_dot_prod_avx.asm \
	erasure_code/gf_4vect_dot_prod_avx.asm \
	erasure_code/gf_5vect_dot_prod_avx.asm \
	erasure_code/gf_6vect_dot_prod_avx.asm \
	erasure_code/gf_2vect_dot_prod_avx2.asm \
	erasure_code/gf_3vect_dot_prod_avx2.asm \
	erasure_code/gf_4vect_dot_prod_avx2.asm \
	erasure_code/gf_5vect_dot_prod_avx2.asm \
	erasure_code/gf_6vect_dot_prod_avx2.asm \
	erasure_code/gf_vect_mad_sse.asm \
	erasure_code/gf_2vect_mad_sse.asm \
	erasure_code/gf_3vect_mad_sse.asm \
	erasure_code/gf_4vect_mad_sse.asm \
	erasure_code/gf_5vect_mad_sse.asm \
	erasure_code/gf_6vect_mad_sse.asm \
	erasure_code/gf_vect_mad_avx.asm \
	erasure_code/gf_2vect_mad_avx.asm \
	erasure_code/gf_3vect_mad_avx.asm \
	erasure_code/gf_4vect_mad_avx.asm \
	erasure_code/gf_5vect_mad_avx.asm \
	erasure_code/gf_6vect_mad_avx.asm \
	erasure_code/gf_vect_mad_avx2.asm \
	erasure_code/gf_2vect_mad_avx2.asm \
	erasure_code/gf_3vect_mad_avx2.asm \
	erasure_code/gf_4vect_mad_avx2.asm \
	erasure_code/gf_5vect_mad_avx2.asm \
	erasure_code/gf_6vect_mad_avx2.asm \
	erasure_code/ec_multibinary.asm \
	erasure_code/gf_vect_dot_prod_avx512.asm \
	erasure_code/gf_2vect_dot_prod_avx512.asm \
	erasure_code/gf_3vect_dot_prod_avx512.asm \
	erasure_code/gf_4vect_dot_prod_avx512.asm \
	erasure_code/gf_5vect_dot_prod_avx512.asm \
	erasure_code/gf_6vect_dot_prod_avx512.asm \
	erasure_code/gf_vect_mad_avx512.asm \
	erasure_code/gf_2vect_mad_avx512.asm \
	erasure_code/gf_3vect_mad_avx512.asm \
	erasure_code/gf_4vect_mad_avx512.asm \
	erasure_code/gf_5vect_mad_avx512.asm \
	erasure_code/gf_6vect_mad_avx512.asm raid/xor_gen_sse.asm \
	raid/pq_gen_sse.asm raid/xor_check_sse.asm \
	raid/pq_check_sse.asm raid/pq_gen_avx.asm raid/xor_gen_avx.asm \
	raid/pq_gen_avx2.asm raid/xor_gen_avx512.asm \
	raid/pq_gen_avx512.asm raid/raid_multibinary.asm \
	crc/crc16_t10dif_01.asm crc/crc16_t10dif_by4.asm \
	crc/crc16_t10dif_02.asm crc/crc16_t10dif_by16_10.asm \
	crc/crc16_t10dif_copy_by4.asm crc/crc16_t10dif_copy_by4_02.asm \
	crc/crc32_ieee_01.asm crc/crc32_ieee_02.asm \
	crc/crc32_ieee_by4.asm crc/crc32_ieee_by16_10.asm \
	crc/crc32_iscsi_01.asm crc/crc32_iscsi_00.asm \
	crc/crc32_iscsi_by16_10.asm crc/crc_multibinary.asm \
	crc/crc64_multibinary.asm crc/crc64_ecma_refl_by8.asm \
	crc/crc64_ecma_refl_by16_10.asm crc/crc64_ecma_norm_by8.asm \
	crc/crc64_ecma_norm_by16_10.asm crc/crc64_iso_refl_by8.asm \
	crc/crc64_iso_refl_by16_10.asm crc/crc64_iso_norm_by8.asm \
	crc/crc64_iso_norm_by16_10.asm crc/crc64_jones_refl_by8.asm \
	crc/crc64_jones_refl_by16_10.asm crc/crc64_jones_norm_by8.asm \
	crc/crc64_jones_norm_by16_10.asm crc/crc32_gzip_refl_by8.asm \
	crc/crc32_gzip_refl_by8_02.asm crc/crc32_gzip_refl_by16_10.asm \
	igzip/igzip_body.asm igzip/igzip_finish.asm \
	igzip/igzip_icf_body_h1_gr_bt.asm igzip/igzip_icf_finish.asm \
	igzip/rfc1951_lookup.asm igzip/adler32_sse.asm \
	igzip/adler32_avx2_4.asm igzip/igzip_multibinary.asm \
	igzip/igzip_update_histogram_01.asm \
	igzip/igzip_update_histogram_04.asm \
	igzip/igzip_decode_block_stateless_01.asm \
	igzip/igzip_decode_block_stateless_04.asm \
	igzip/igzip_inflate_multibinary.asm igzip/encode_df_04.asm \
	igzip/encode_df_06.asm igzip/proc_heap.asm \
	igzip/igzip_deflate_hash.asm \
	igzip/igzip_gen_icf_map_lh1_06.asm \
	igzip/igzip_gen_icf_map_lh1_04.asm \
	igzip/igzip_set_long_icf_fg_04.asm \
	igzip/igzip_set_long_icf_fg_06.asm mem/mem_zero_detect_avx.asm \
	mem/mem_zero_detect_sse.asm mem/mem_multibinary.asm
lsrc_x86_32 = erasure_code/ec_highlevel_func.c \
	erasure_code/ec_multibinary.asm \
	erasure_code/gf_vect_dot_prod_avx.asm \
	erasure_code/gf_2vect_dot_prod_avx.asm \
	erasure_code/gf_3vect_dot_prod_avx.asm \
	erasure_code/gf_4vect_dot_prod_avx.asm \
	erasure_code/gf_vect_dot_prod_sse.asm \
	erasure_code/gf_2vect_dot_prod_sse.asm \
	erasure_code/gf_3vect_dot_prod_sse.asm \
	erasure_code/gf_4vect_dot_prod_sse.asm \
	erasure_code/gf_vect_dot_prod_avx2.asm \
	erasure_code/gf_2vect_dot_prod_avx2.asm \
	erasure_code/gf_3vect_dot_prod_avx2.asm \
	erasure_code/gf_4vect_dot_prod_avx2.asm raid/xor_gen_sse.asm \
	raid/pq_gen_sse_i32.asm raid/xor_check_sse.asm \
	raid/pq_check_sse_i32.asm raid/raid_multibinary_i32.asm \
	crc/crc_base_aliases.c igzip/igzip_base_aliases.c \
	igzip/proc_heap_base.c

#CRC32/CRC32C for micro-architecture
lsrc_aarch64 = erasure_code/aarch64/ec_aarch64_highlevel_func.c \
	erasure_code/aarch64/ec_aarch64_dispatcher.c \
	erasure_code/aarch64/gf_vect_dot_prod_neon.S \
	erasure_code/aarch64/gf_2vect_dot_prod_neon.S \
	erasure_code/aarch64/gf_3vect_dot_prod_neon.S \
	erasure_code/aarch64/gf_4vect_dot_prod_neon.S \
	erasure_code/aarch64/gf_5vect_dot_prod_neon.S \
	erasure_code/aarch64/gf_vect_mad_neon.S \
	erasure_code/aarch64/gf_2vect_mad_neon.S \
	erasure_code/aarch64/gf_3vect_mad_neon.S \
	erasure_code/aarch64/gf_4vect_mad_neon.S \
	erasure_code/aarch64/gf_5vect_mad_neon.S \
	erasure_code/aarch64/gf_6vect_mad_neon.S \
	erasure_code/aarch64/gf_vect_mul_neon.S \
	erasure_code/aarch64/ec_multibinary_arm.S \
	raid/aarch64/xor_gen_neon.S raid/aarch64/pq_gen_neon.S \
	raid/aarch64/xor_check_neon.S raid/aarch64/pq_check_neon.S \
	raid/aarch64/raid_multibinary_arm.S \
	raid/aarch64/raid_aarch64_dispatcher.c \
	crc/aarch64/crc_multibinary_arm.S \
	crc/aarch64/crc_aarch64_dispatcher.c \
	crc/aarch64/crc16_t10dif_pmull.S \
	crc/aarch64/crc16_t10dif_copy_pmull.S \
	crc/aarch64/crc32_ieee_norm_pmull.S \
	crc/aarch64/crc64_ecma_refl_pmull.S \
	crc/aarch64/crc64_ecma_norm_pmull.S \
	crc/aarch64/crc64_iso_refl_pmull.S \
	crc/aarch64/crc64_iso_norm_pmull.S \
	crc/aarch64/crc64_jones_refl_pmull.S \
	crc/aarch64/crc64_jones_norm_pmull.S \
	crc/aarch64/crc32_iscsi_refl_pmull.S \
	crc/aarch64/crc32_gzip_refl_pmull.S \
	crc/aarch64/crc32_iscsi_3crc_fold.S \
	crc/aarch64/crc32_gzip_refl_3crc_fold.S \
	crc/aarch64/crc32_iscsi_crc_ext.S \
	crc/aarch64/crc32_gzip_refl_crc_ext.S \
	crc/aarch64/crc32_mix_default.S \
	crc/aarch64/crc32c_mix_default.S \
	crc/aarch64/crc32_mix_neoverse_n1.S \
	crc/aarch64/crc32c_mix_neoverse_n1.S \
	igzip/aarch64/igzip_inflate_multibinary_arm64.S \
	igzip/aarch64/igzip_multibinary_arm64.S \
	igzip/aarch64/igzip_isal_adler32_neon.S \
	igzip/aarch64/igzip_multibinary_aarch64_dispatcher.c \
	igzip/aarch64/igzip_deflate_body_aarch64.S \
	igzip/aarch64/igzip_deflate_finish_aarch64.S \
	igzip/aarch64/isal_deflate_icf_body_hash_hist.S \
	igzip/aarch64/isal_deflate_icf_finish_hash_hist.S \
	igzip/aarch64/igzip_set_long_icf_fg.S \
	igzip/aarch64/encode_df.S \
	igzip/aarch64/isal_update_histogram.S \
	igzip/aarch64/gen_icf_map.S \
	igzip/aarch64/igzip_deflate_hash_aarch64.S \
	igzip/aarch64/igzip_decode_huffman_code_block_aarch64.S \
	igzip/proc_heap_base.c mem/aarch64/mem_zero_detect_neon.S \
	mem/aarch64/mem_multibinary_arm.S \
	mem/aarch64/mem_aarch64_dispatcher.c
lsrc_ppc64le = erasure_code/ppc64le/ec_base_vsx.c \
	erasure_code/ppc64le/gf_vect_mul_vsx.c \
	erasure_code/ppc64le/gf_vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_vect_mad_vsx.c \
	erasure_code/ppc64le/gf_2vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_2vect_mad_vsx.c \
	erasure_code/ppc64le/gf_3vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_3vect_mad_vsx.c \
	erasure_code/ppc64le/gf_4vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_4vect_mad_vsx.c \
	erasure_code/ppc64le/gf_5vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_5vect_mad_vsx.c \
	erasure_code/ppc64le/gf_6vect_dot_prod_vsx.c \
	erasure_code/ppc64le/gf_6vect_mad_vsx.c \
	raid/raid_base_aliases.c crc/crc_base_aliases.c \
	igzip/igzip_base_aliases.c igzip/proc_heap_base.c \
	mem/mem_zero_detect_base_aliases.c
lsrc_base_aliases = erasure_code/ec_base_aliases.c \
	raid/raid_base_aliases.c crc/crc_base_aliases.c \
	igzip/igzip_base_aliases.c igzip/proc_heap_base.c \
	mem/mem_zero_detect_base_aliases.c
lsrc32 = xor_gen_sse.asm pq_gen_sse_i32.asm xor_check_sse.asm \
	pq_check_sse_i32.asm raid_base.c
unit_tests32 = erasure_code/erasure_code_base_test \
	erasure_code/erasure_code_test erasure_code/gf_vect_mul_test \
	erasure_code/gf_vect_mul_base_test \
	erasure_code/gf_vect_dot_prod_base_test \
	erasure_code/gf_vect_dot_prod_test
perf_tests32 = erasure_code/gf_vect_mul_perf \
	erasure_code/gf_vect_dot_prod_perf \
	erasure_code/erasure_code_perf \
	erasure_code/erasure_code_base_perf \
	erasure_code/gf_vect_dot_prod_1tbl
progs = 
igzip_igzip_rand_test_LDADD = libisal.la
igzip_igzip_perf_LDADD = libisal.la
igzip_igzip_perf_LDFLAGS = -lz
igzip_igzip_inflate_test_LDADD = libisal.la
igzip_igzip_inflate_test_LDFLAGS = -lz
igzip_igzip_hist_perf_LDADD = libisal.la
tests_fuzz_igzip_fuzz_inflate_LDADD = tests/fuzz/igzip_checked_inflate_fuzz_test.o libisal.la
tests_fuzz_igzip_fuzz_inflate_LDFLAGS = -lz
tests_fuzz_igzip_dump_inflate_corpus_LDADD = libisal.la

# LLVM fuzz tests
llvm_fuzz_tests = tests/fuzz/igzip_simple_inflate_fuzz_test \
	tests/fuzz/igzip_checked_inflate_fuzz_test \
	tests/fuzz/igzip_simple_round_trip_fuzz_test
programs_igzip_SOURCES = programs/igzip_cli.c
programs_igzip_LDADD = libisal.la
dist_man_MANS = programs/igzip.1

# Include units

# LIB version info not necessarily the same as package version
LIBISAL_CURRENT = 2
LIBISAL_REVISION = 30
LIBISAL_AGE = 0
lib_LTLIBRARIES = libisal.la
libisal_la_SOURCES = ${lsrc} $(am__append_1) $(am__append_3) \
	$(am__append_5) $(am__append_7) $(am__append_9)
nobase_include_HEADERS = isa-l.h
libisal_la_LDFLAGS = $(AM_LDFLAGS) \
	-version-info $(LIBISAL_CURRENT):$(LIBISAL_REVISION):$(LIBISAL_AGE)

libisal_la_LIBADD = ${noinst_LTLIBRARIES}
#as_filter = $(CC) -D__ASSEMBLY__
as_filter = ${srcdir}/tools/nasm-filter.sh
#as_filter = ${srcdir}/tools/yasm-filter.sh
#as_filter = ${srcdir}/tools/nasm-cet-filter.sh
##as_filter = ${srcdir}/tools/yasm-cet-filter.sh
AM_CFLAGS = ${my_CFLAGS} ${INCLUDE} $(src_include) ${D}
AM_CCASFLAGS = ${yasm_args} ${INCLUDE} ${src_include} ${DEFS} ${D}
#AM_CCASFLAGS = ${AM_CFLAGS}

# Generate isa-l.h
BUILT_SOURCES = isa-l.h
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .S .asm .c .lo .log .o .obj .s .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/erasure_code/Makefile.am $(srcdir)/erasure_code/aarch64/Makefile.am $(srcdir)/erasure_code/ppc64le/Makefile.am $(srcdir)/raid/Makefile.am $(srcdir)/raid/aarch64/Makefile.am $(srcdir)/crc/Makefile.am $(srcdir)/crc/aarch64/Makefile.am $(srcdir)/igzip/Makefile.am $(srcdir)/tests/fuzz/Makefile.am $(srcdir)/examples/ec/Makefile.am $(srcdir)/programs/Makefile.am $(srcdir)/mem/Makefile.am $(srcdir)/mem/aarch64/Makefile.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/erasure_code/Makefile.am $(srcdir)/erasure_code/aarch64/Makefile.am $(srcdir)/erasure_code/ppc64le/Makefile.am $(srcdir)/raid/Makefile.am $(srcdir)/raid/aarch64/Makefile.am $(srcdir)/crc/Makefile.am $(srcdir)/crc/aarch64/Makefile.am $(srcdir)/igzip/Makefile.am $(srcdir)/tests/fuzz/Makefile.am $(srcdir)/examples/ec/Makefile.am $(srcdir)/programs/Makefile.am $(srcdir)/mem/Makefile.am $(srcdir)/mem/aarch64/Makefile.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
libisal.pc: $(top_builddir)/config.status $(srcdir)/libisal.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
erasure_code/$(am__dirstamp):
	@$(MKDIR_P) erasure_code
	@: > erasure_code/$(am__dirstamp)
erasure_code/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) erasure_code/$(DEPDIR)
	@: > erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/ec_base.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
raid/$(am__dirstamp):
	@$(MKDIR_P) raid
	@: > raid/$(am__dirstamp)
raid/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) raid/$(DEPDIR)
	@: > raid/$(DEPDIR)/$(am__dirstamp)
raid/raid_base.lo: raid/$(am__dirstamp) raid/$(DEPDIR)/$(am__dirstamp)
crc/$(am__dirstamp):
	@$(MKDIR_P) crc
	@: > crc/$(am__dirstamp)
crc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crc/$(DEPDIR)
	@: > crc/$(DEPDIR)/$(am__dirstamp)
crc/crc_base.lo: crc/$(am__dirstamp) crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_base.lo: crc/$(am__dirstamp) crc/$(DEPDIR)/$(am__dirstamp)
igzip/$(am__dirstamp):
	@$(MKDIR_P) igzip
	@: > igzip/$(am__dirstamp)
igzip/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) igzip/$(DEPDIR)
	@: > igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip.lo: igzip/$(am__dirstamp) igzip/$(DEPDIR)/$(am__dirstamp)
igzip/hufftables_c.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_base.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_icf_base.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/adler32_base.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/flatten_ll.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/encode_df.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_icf_body.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/huff_codes.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_inflate.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
mem/$(am__dirstamp):
	@$(MKDIR_P) mem
	@: > mem/$(am__dirstamp)
mem/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) mem/$(DEPDIR)
	@: > mem/$(DEPDIR)/$(am__dirstamp)
mem/mem_zero_detect_base.lo: mem/$(am__dirstamp) \
	mem/$(DEPDIR)/$(am__dirstamp)
erasure_code/ec_highlevel_func.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mul_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mul_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/ec_multibinary.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_dot_prod_avx512.lo:  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_dot_prod_avx512.lo:  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_dot_prod_avx512.lo:  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_dot_prod_avx512.lo:  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_dot_prod_avx512.lo:  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mad_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_mad_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_mad_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_mad_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_mad_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_mad_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
raid/xor_gen_sse.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_gen_sse.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/xor_check_sse.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_check_sse.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_gen_avx.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/xor_gen_avx.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_gen_avx2.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/xor_gen_avx512.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_gen_avx512.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/raid_multibinary.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
crc/crc16_t10dif_01.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc16_t10dif_by4.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc16_t10dif_02.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc16_t10dif_by16_10.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc16_t10dif_copy_by4.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc16_t10dif_copy_by4_02.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_ieee_01.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_ieee_02.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_ieee_by4.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_ieee_by16_10.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_iscsi_01.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_iscsi_00.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_iscsi_by16_10.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc_multibinary.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_multibinary.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_ecma_refl_by8.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_ecma_refl_by16_10.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_ecma_norm_by8.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_ecma_norm_by16_10.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_iso_refl_by8.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_iso_refl_by16_10.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_iso_norm_by8.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_iso_norm_by16_10.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_jones_refl_by8.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_jones_refl_by16_10.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_jones_norm_by8.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc64_jones_norm_by16_10.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_gzip_refl_by8.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_gzip_refl_by8_02.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_gzip_refl_by16_10.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_body.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_finish.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_icf_body_h1_gr_bt.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_icf_finish.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/rfc1951_lookup.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/adler32_sse.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/adler32_avx2_4.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_multibinary.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_update_histogram_01.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_update_histogram_04.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_decode_block_stateless_01.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_decode_block_stateless_04.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_inflate_multibinary.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/encode_df_04.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/encode_df_06.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/proc_heap.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_deflate_hash.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_gen_icf_map_lh1_06.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_gen_icf_map_lh1_04.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_set_long_icf_fg_04.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_set_long_icf_fg_06.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
mem/mem_zero_detect_avx.lo: mem/$(am__dirstamp) \
	mem/$(DEPDIR)/$(am__dirstamp)
mem/mem_zero_detect_sse.lo: mem/$(am__dirstamp) \
	mem/$(DEPDIR)/$(am__dirstamp)
mem/mem_multibinary.lo: mem/$(am__dirstamp) \
	mem/$(DEPDIR)/$(am__dirstamp)
raid/pq_gen_sse_i32.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_check_sse_i32.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/raid_multibinary_i32.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
crc/crc_base_aliases.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_base_aliases.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/proc_heap_base.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/$(am__dirstamp):
	@$(MKDIR_P) erasure_code/aarch64
	@: > erasure_code/aarch64/$(am__dirstamp)
erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) erasure_code/aarch64/$(DEPDIR)
	@: > erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/ec_aarch64_highlevel_func.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/ec_aarch64_dispatcher.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_vect_dot_prod_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_2vect_dot_prod_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_3vect_dot_prod_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_4vect_dot_prod_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_5vect_dot_prod_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_vect_mad_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_2vect_mad_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_3vect_mad_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_4vect_mad_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_5vect_mad_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_6vect_mad_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/gf_vect_mul_neon.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/aarch64/ec_multibinary_arm.lo:  \
	erasure_code/aarch64/$(am__dirstamp) \
	erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
raid/aarch64/$(am__dirstamp):
	@$(MKDIR_P) raid/aarch64
	@: > raid/aarch64/$(am__dirstamp)
raid/aarch64/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) raid/aarch64/$(DEPDIR)
	@: > raid/aarch64/$(DEPDIR)/$(am__dirstamp)
raid/aarch64/xor_gen_neon.lo: raid/aarch64/$(am__dirstamp) \
	raid/aarch64/$(DEPDIR)/$(am__dirstamp)
raid/aarch64/pq_gen_neon.lo: raid/aarch64/$(am__dirstamp) \
	raid/aarch64/$(DEPDIR)/$(am__dirstamp)
raid/aarch64/xor_check_neon.lo: raid/aarch64/$(am__dirstamp) \
	raid/aarch64/$(DEPDIR)/$(am__dirstamp)
raid/aarch64/pq_check_neon.lo: raid/aarch64/$(am__dirstamp) \
	raid/aarch64/$(DEPDIR)/$(am__dirstamp)
raid/aarch64/raid_multibinary_arm.lo: raid/aarch64/$(am__dirstamp) \
	raid/aarch64/$(DEPDIR)/$(am__dirstamp)
raid/aarch64/raid_aarch64_dispatcher.lo: raid/aarch64/$(am__dirstamp) \
	raid/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/$(am__dirstamp):
	@$(MKDIR_P) crc/aarch64
	@: > crc/aarch64/$(am__dirstamp)
crc/aarch64/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crc/aarch64/$(DEPDIR)
	@: > crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc_multibinary_arm.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc_aarch64_dispatcher.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc16_t10dif_pmull.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc16_t10dif_copy_pmull.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc32_ieee_norm_pmull.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc64_ecma_refl_pmull.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc64_ecma_norm_pmull.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc64_iso_refl_pmull.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc64_iso_norm_pmull.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc64_jones_refl_pmull.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc64_jones_norm_pmull.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc32_iscsi_refl_pmull.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc32_gzip_refl_pmull.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc32_iscsi_3crc_fold.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc32_gzip_refl_3crc_fold.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc32_iscsi_crc_ext.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc32_gzip_refl_crc_ext.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc32_mix_default.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc32c_mix_default.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc32_mix_neoverse_n1.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
crc/aarch64/crc32c_mix_neoverse_n1.lo: crc/aarch64/$(am__dirstamp) \
	crc/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/$(am__dirstamp):
	@$(MKDIR_P) igzip/aarch64
	@: > igzip/aarch64/$(am__dirstamp)
igzip/aarch64/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) igzip/aarch64/$(DEPDIR)
	@: > igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/igzip_inflate_multibinary_arm64.lo:  \
	igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/igzip_multibinary_arm64.lo:  \
	igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/igzip_isal_adler32_neon.lo:  \
	igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/igzip_multibinary_aarch64_dispatcher.lo:  \
	igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/igzip_deflate_body_aarch64.lo:  \
	igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/igzip_deflate_finish_aarch64.lo:  \
	igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/isal_deflate_icf_body_hash_hist.lo:  \
	igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/isal_deflate_icf_finish_hash_hist.lo:  \
	igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/igzip_set_long_icf_fg.lo: igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/encode_df.lo: igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/isal_update_histogram.lo: igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/gen_icf_map.lo: igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/igzip_deflate_hash_aarch64.lo:  \
	igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
igzip/aarch64/igzip_decode_huffman_code_block_aarch64.lo:  \
	igzip/aarch64/$(am__dirstamp) \
	igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
mem/aarch64/$(am__dirstamp):
	@$(MKDIR_P) mem/aarch64
	@: > mem/aarch64/$(am__dirstamp)
mem/aarch64/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) mem/aarch64/$(DEPDIR)
	@: > mem/aarch64/$(DEPDIR)/$(am__dirstamp)
mem/aarch64/mem_zero_detect_neon.lo: mem/aarch64/$(am__dirstamp) \
	mem/aarch64/$(DEPDIR)/$(am__dirstamp)
mem/aarch64/mem_multibinary_arm.lo: mem/aarch64/$(am__dirstamp) \
	mem/aarch64/$(DEPDIR)/$(am__dirstamp)
mem/aarch64/mem_aarch64_dispatcher.lo: mem/aarch64/$(am__dirstamp) \
	mem/aarch64/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/$(am__dirstamp):
	@$(MKDIR_P) erasure_code/ppc64le
	@: > erasure_code/ppc64le/$(am__dirstamp)
erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) erasure_code/ppc64le/$(DEPDIR)
	@: > erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/ec_base_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_vect_mul_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_vect_dot_prod_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_vect_mad_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_2vect_dot_prod_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_2vect_mad_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_3vect_dot_prod_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_3vect_mad_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_4vect_dot_prod_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_4vect_mad_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_5vect_dot_prod_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_5vect_mad_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_6vect_dot_prod_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
erasure_code/ppc64le/gf_6vect_mad_vsx.lo:  \
	erasure_code/ppc64le/$(am__dirstamp) \
	erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
raid/raid_base_aliases.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
mem/mem_zero_detect_base_aliases.lo: mem/$(am__dirstamp) \
	mem/$(DEPDIR)/$(am__dirstamp)
erasure_code/ec_base_aliases.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

libisal.la: $(libisal_la_OBJECTS) $(libisal_la_DEPENDENCIES) $(EXTRA_libisal_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libisal_la_LINK) -rpath $(libdir) $(libisal_la_OBJECTS) $(libisal_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
crc/crc16_t10dif_copy_perf.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc16_t10dif_copy_perf$(EXEEXT): $(crc_crc16_t10dif_copy_perf_OBJECTS) $(crc_crc16_t10dif_copy_perf_DEPENDENCIES) $(EXTRA_crc_crc16_t10dif_copy_perf_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc16_t10dif_copy_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc16_t10dif_copy_perf_OBJECTS) $(crc_crc16_t10dif_copy_perf_LDADD) $(LIBS)
crc/crc16_t10dif_copy_test.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc16_t10dif_copy_test$(EXEEXT): $(crc_crc16_t10dif_copy_test_OBJECTS) $(crc_crc16_t10dif_copy_test_DEPENDENCIES) $(EXTRA_crc_crc16_t10dif_copy_test_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc16_t10dif_copy_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc16_t10dif_copy_test_OBJECTS) $(crc_crc16_t10dif_copy_test_LDADD) $(LIBS)
crc/crc16_t10dif_op_perf.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc16_t10dif_op_perf$(EXEEXT): $(crc_crc16_t10dif_op_perf_OBJECTS) $(crc_crc16_t10dif_op_perf_DEPENDENCIES) $(EXTRA_crc_crc16_t10dif_op_perf_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc16_t10dif_op_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc16_t10dif_op_perf_OBJECTS) $(crc_crc16_t10dif_op_perf_LDADD) $(LIBS)
crc/crc16_t10dif_perf.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc16_t10dif_perf$(EXEEXT): $(crc_crc16_t10dif_perf_OBJECTS) $(crc_crc16_t10dif_perf_DEPENDENCIES) $(EXTRA_crc_crc16_t10dif_perf_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc16_t10dif_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc16_t10dif_perf_OBJECTS) $(crc_crc16_t10dif_perf_LDADD) $(LIBS)
crc/crc16_t10dif_test.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc16_t10dif_test$(EXEEXT): $(crc_crc16_t10dif_test_OBJECTS) $(crc_crc16_t10dif_test_DEPENDENCIES) $(EXTRA_crc_crc16_t10dif_test_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc16_t10dif_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc16_t10dif_test_OBJECTS) $(crc_crc16_t10dif_test_LDADD) $(LIBS)
crc/crc32_funcs_test.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc32_funcs_test$(EXEEXT): $(crc_crc32_funcs_test_OBJECTS) $(crc_crc32_funcs_test_DEPENDENCIES) $(EXTRA_crc_crc32_funcs_test_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc32_funcs_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc32_funcs_test_OBJECTS) $(crc_crc32_funcs_test_LDADD) $(LIBS)
crc/crc32_gzip_refl_perf.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc32_gzip_refl_perf$(EXEEXT): $(crc_crc32_gzip_refl_perf_OBJECTS) $(crc_crc32_gzip_refl_perf_DEPENDENCIES) $(EXTRA_crc_crc32_gzip_refl_perf_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc32_gzip_refl_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc32_gzip_refl_perf_OBJECTS) $(crc_crc32_gzip_refl_perf_LDADD) $(LIBS)
crc/crc32_ieee_perf.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc32_ieee_perf$(EXEEXT): $(crc_crc32_ieee_perf_OBJECTS) $(crc_crc32_ieee_perf_DEPENDENCIES) $(EXTRA_crc_crc32_ieee_perf_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc32_ieee_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc32_ieee_perf_OBJECTS) $(crc_crc32_ieee_perf_LDADD) $(LIBS)
crc/crc32_iscsi_perf.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc32_iscsi_perf$(EXEEXT): $(crc_crc32_iscsi_perf_OBJECTS) $(crc_crc32_iscsi_perf_DEPENDENCIES) $(EXTRA_crc_crc32_iscsi_perf_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc32_iscsi_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc32_iscsi_perf_OBJECTS) $(crc_crc32_iscsi_perf_LDADD) $(LIBS)
crc/crc64_example.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc64_example$(EXEEXT): $(crc_crc64_example_OBJECTS) $(crc_crc64_example_DEPENDENCIES) $(EXTRA_crc_crc64_example_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc64_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc64_example_OBJECTS) $(crc_crc64_example_LDADD) $(LIBS)
crc/crc64_funcs_perf.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc64_funcs_perf$(EXEEXT): $(crc_crc64_funcs_perf_OBJECTS) $(crc_crc64_funcs_perf_DEPENDENCIES) $(EXTRA_crc_crc64_funcs_perf_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc64_funcs_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc64_funcs_perf_OBJECTS) $(crc_crc64_funcs_perf_LDADD) $(LIBS)
crc/crc64_funcs_test.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc64_funcs_test$(EXEEXT): $(crc_crc64_funcs_test_OBJECTS) $(crc_crc64_funcs_test_DEPENDENCIES) $(EXTRA_crc_crc64_funcs_test_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc64_funcs_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc64_funcs_test_OBJECTS) $(crc_crc64_funcs_test_LDADD) $(LIBS)
crc/crc_simple_test.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)

crc/crc_simple_test$(EXEEXT): $(crc_crc_simple_test_OBJECTS) $(crc_crc_simple_test_DEPENDENCIES) $(EXTRA_crc_crc_simple_test_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc_simple_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc_simple_test_OBJECTS) $(crc_crc_simple_test_LDADD) $(LIBS)
erasure_code/erasure_code_base_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/erasure_code_base_perf$(EXEEXT): $(erasure_code_erasure_code_base_perf_OBJECTS) $(erasure_code_erasure_code_base_perf_DEPENDENCIES) $(EXTRA_erasure_code_erasure_code_base_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_base_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_base_perf_OBJECTS) $(erasure_code_erasure_code_base_perf_LDADD) $(LIBS)
erasure_code/erasure_code_base_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/erasure_code_base_test$(EXEEXT): $(erasure_code_erasure_code_base_test_OBJECTS) $(erasure_code_erasure_code_base_test_DEPENDENCIES) $(EXTRA_erasure_code_erasure_code_base_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_base_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_base_test_OBJECTS) $(erasure_code_erasure_code_base_test_LDADD) $(LIBS)
erasure_code/erasure_code_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/erasure_code_perf$(EXEEXT): $(erasure_code_erasure_code_perf_OBJECTS) $(erasure_code_erasure_code_perf_DEPENDENCIES) $(EXTRA_erasure_code_erasure_code_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_perf_OBJECTS) $(erasure_code_erasure_code_perf_LDADD) $(LIBS)
erasure_code/erasure_code_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/erasure_code_test$(EXEEXT): $(erasure_code_erasure_code_test_OBJECTS) $(erasure_code_erasure_code_test_DEPENDENCIES) $(EXTRA_erasure_code_erasure_code_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_test_OBJECTS) $(erasure_code_erasure_code_test_LDADD) $(LIBS)
erasure_code/erasure_code_update_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/erasure_code_update_perf$(EXEEXT): $(erasure_code_erasure_code_update_perf_OBJECTS) $(erasure_code_erasure_code_update_perf_DEPENDENCIES) $(EXTRA_erasure_code_erasure_code_update_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_update_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_update_perf_OBJECTS) $(erasure_code_erasure_code_update_perf_LDADD) $(LIBS)
erasure_code/erasure_code_update_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/erasure_code_update_test$(EXEEXT): $(erasure_code_erasure_code_update_test_OBJECTS) $(erasure_code_erasure_code_update_test_DEPENDENCIES) $(EXTRA_erasure_code_erasure_code_update_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_update_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_update_test_OBJECTS) $(erasure_code_erasure_code_update_test_LDADD) $(LIBS)
erasure_code/gen_rs_matrix_limits.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/gen_rs_matrix_limits$(EXEEXT): $(erasure_code_gen_rs_matrix_limits_OBJECTS) $(erasure_code_gen_rs_matrix_limits_DEPENDENCIES) $(EXTRA_erasure_code_gen_rs_matrix_limits_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gen_rs_matrix_limits$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gen_rs_matrix_limits_OBJECTS) $(erasure_code_gen_rs_matrix_limits_LDADD) $(LIBS)
erasure_code/gf_inverse_test.$(OBJEXT): erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/gf_inverse_test$(EXEEXT): $(erasure_code_gf_inverse_test_OBJECTS) $(erasure_code_gf_inverse_test_DEPENDENCIES) $(EXTRA_erasure_code_gf_inverse_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_inverse_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_inverse_test_OBJECTS) $(erasure_code_gf_inverse_test_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_1tbl.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/gf_vect_dot_prod_1tbl$(EXEEXT): $(erasure_code_gf_vect_dot_prod_1tbl_OBJECTS) $(erasure_code_gf_vect_dot_prod_1tbl_DEPENDENCIES) $(EXTRA_erasure_code_gf_vect_dot_prod_1tbl_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_1tbl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_1tbl_OBJECTS) $(erasure_code_gf_vect_dot_prod_1tbl_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_base_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/gf_vect_dot_prod_base_test$(EXEEXT): $(erasure_code_gf_vect_dot_prod_base_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_base_test_DEPENDENCIES) $(EXTRA_erasure_code_gf_vect_dot_prod_base_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_base_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_base_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_base_test_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/gf_vect_dot_prod_perf$(EXEEXT): $(erasure_code_gf_vect_dot_prod_perf_OBJECTS) $(erasure_code_gf_vect_dot_prod_perf_DEPENDENCIES) $(EXTRA_erasure_code_gf_vect_dot_prod_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_perf_OBJECTS) $(erasure_code_gf_vect_dot_prod_perf_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/gf_vect_dot_prod_test$(EXEEXT): $(erasure_code_gf_vect_dot_prod_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_test_DEPENDENCIES) $(EXTRA_erasure_code_gf_vect_dot_prod_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_test_LDADD) $(LIBS)
erasure_code/gf_vect_mad_test.$(OBJEXT): erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/gf_vect_mad_test$(EXEEXT): $(erasure_code_gf_vect_mad_test_OBJECTS) $(erasure_code_gf_vect_mad_test_DEPENDENCIES) $(EXTRA_erasure_code_gf_vect_mad_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mad_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mad_test_OBJECTS) $(erasure_code_gf_vect_mad_test_LDADD) $(LIBS)
erasure_code/gf_vect_mul_base_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/gf_vect_mul_base_test$(EXEEXT): $(erasure_code_gf_vect_mul_base_test_OBJECTS) $(erasure_code_gf_vect_mul_base_test_DEPENDENCIES) $(EXTRA_erasure_code_gf_vect_mul_base_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mul_base_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mul_base_test_OBJECTS) $(erasure_code_gf_vect_mul_base_test_LDADD) $(LIBS)
erasure_code/gf_vect_mul_perf.$(OBJEXT): erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/gf_vect_mul_perf$(EXEEXT): $(erasure_code_gf_vect_mul_perf_OBJECTS) $(erasure_code_gf_vect_mul_perf_DEPENDENCIES) $(EXTRA_erasure_code_gf_vect_mul_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mul_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mul_perf_OBJECTS) $(erasure_code_gf_vect_mul_perf_LDADD) $(LIBS)
erasure_code/gf_vect_mul_test.$(OBJEXT): erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)

erasure_code/gf_vect_mul_test$(EXEEXT): $(erasure_code_gf_vect_mul_test_OBJECTS) $(erasure_code_gf_vect_mul_test_DEPENDENCIES) $(EXTRA_erasure_code_gf_vect_mul_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mul_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mul_test_OBJECTS) $(erasure_code_gf_vect_mul_test_LDADD) $(LIBS)
examples/ec/$(am__dirstamp):
	@$(MKDIR_P) examples/ec
	@: > examples/ec/$(am__dirstamp)
examples/ec/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) examples/ec/$(DEPDIR)
	@: > examples/ec/$(DEPDIR)/$(am__dirstamp)
examples/ec/ec_piggyback_example.$(OBJEXT):  \
	examples/ec/$(am__dirstamp) \
	examples/ec/$(DEPDIR)/$(am__dirstamp)

examples/ec/ec_piggyback_example$(EXEEXT): $(examples_ec_ec_piggyback_example_OBJECTS) $(examples_ec_ec_piggyback_example_DEPENDENCIES) $(EXTRA_examples_ec_ec_piggyback_example_DEPENDENCIES) examples/ec/$(am__dirstamp)
	@rm -f examples/ec/ec_piggyback_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(examples_ec_ec_piggyback_example_OBJECTS) $(examples_ec_ec_piggyback_example_LDADD) $(LIBS)
examples/ec/ec_simple_example.$(OBJEXT): examples/ec/$(am__dirstamp) \
	examples/ec/$(DEPDIR)/$(am__dirstamp)

examples/ec/ec_simple_example$(EXEEXT): $(examples_ec_ec_simple_example_OBJECTS) $(examples_ec_ec_simple_example_DEPENDENCIES) $(EXTRA_examples_ec_ec_simple_example_DEPENDENCIES) examples/ec/$(am__dirstamp)
	@rm -f examples/ec/ec_simple_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) -fPIC -shared $(examples_ec_ec_simple_example_OBJECTS) $(examples_ec_ec_simple_example_LDADD) $(LIBS)
	#gcc -fPIC -shared -c $(examples_ec_ec_simple_example_OBJECTS) $(examples_ec_ec_simple_example_LDADD) $(LIBS)
	#gcc -fPIC -shared $(examples_ec_ec_simple_example_OBJECTS) -o examples/ec/libec.so

igzip/adler32_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/adler32_perf$(EXEEXT): $(igzip_adler32_perf_OBJECTS) $(igzip_adler32_perf_DEPENDENCIES) $(EXTRA_igzip_adler32_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/adler32_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_adler32_perf_OBJECTS) $(igzip_adler32_perf_LDADD) $(LIBS)
igzip/checksum32_funcs_test.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/checksum32_funcs_test$(EXEEXT): $(igzip_checksum32_funcs_test_OBJECTS) $(igzip_checksum32_funcs_test_DEPENDENCIES) $(EXTRA_igzip_checksum32_funcs_test_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/checksum32_funcs_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_checksum32_funcs_test_OBJECTS) $(igzip_checksum32_funcs_test_LDADD) $(LIBS)
igzip/generate_custom_hufftables.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/generate_custom_hufftables$(EXEEXT): $(igzip_generate_custom_hufftables_OBJECTS) $(igzip_generate_custom_hufftables_DEPENDENCIES) $(EXTRA_igzip_generate_custom_hufftables_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/generate_custom_hufftables$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_generate_custom_hufftables_OBJECTS) $(igzip_generate_custom_hufftables_LDADD) $(LIBS)
igzip/generate_static_inflate.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/generate_static_inflate$(EXEEXT): $(igzip_generate_static_inflate_OBJECTS) $(igzip_generate_static_inflate_DEPENDENCIES) $(EXTRA_igzip_generate_static_inflate_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/generate_static_inflate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_generate_static_inflate_OBJECTS) $(igzip_generate_static_inflate_LDADD) $(LIBS)
igzip/igzip_build_hash_table_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/igzip_build_hash_table_perf$(EXEEXT): $(igzip_igzip_build_hash_table_perf_OBJECTS) $(igzip_igzip_build_hash_table_perf_DEPENDENCIES) $(EXTRA_igzip_igzip_build_hash_table_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_build_hash_table_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_build_hash_table_perf_OBJECTS) $(igzip_igzip_build_hash_table_perf_LDADD) $(LIBS)
igzip/igzip_example.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/igzip_example$(EXEEXT): $(igzip_igzip_example_OBJECTS) $(igzip_igzip_example_DEPENDENCIES) $(EXTRA_igzip_igzip_example_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_example_OBJECTS) $(igzip_igzip_example_LDADD) $(LIBS)
igzip/igzip_file_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/igzip_file_perf$(EXEEXT): $(igzip_igzip_file_perf_OBJECTS) $(igzip_igzip_file_perf_DEPENDENCIES) $(EXTRA_igzip_igzip_file_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_file_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_file_perf_OBJECTS) $(igzip_igzip_file_perf_LDADD) $(LIBS)
igzip/igzip_hist_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/igzip_hist_perf$(EXEEXT): $(igzip_igzip_hist_perf_OBJECTS) $(igzip_igzip_hist_perf_DEPENDENCIES) $(EXTRA_igzip_igzip_hist_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_hist_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_hist_perf_OBJECTS) $(igzip_igzip_hist_perf_LDADD) $(LIBS)
igzip/igzip_inflate_test.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/igzip_inflate_test$(EXEEXT): $(igzip_igzip_inflate_test_OBJECTS) $(igzip_igzip_inflate_test_DEPENDENCIES) $(EXTRA_igzip_igzip_inflate_test_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_inflate_test$(EXEEXT)
	$(AM_V_CCLD)$(igzip_igzip_inflate_test_LINK) $(igzip_igzip_inflate_test_OBJECTS) $(igzip_igzip_inflate_test_LDADD) $(LIBS)
igzip/igzip_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/igzip_perf$(EXEEXT): $(igzip_igzip_perf_OBJECTS) $(igzip_igzip_perf_DEPENDENCIES) $(EXTRA_igzip_igzip_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_perf$(EXEEXT)
	$(AM_V_CCLD)$(igzip_igzip_perf_LINK) $(igzip_igzip_perf_OBJECTS) $(igzip_igzip_perf_LDADD) $(LIBS)
igzip/igzip_rand_test.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/igzip_rand_test$(EXEEXT): $(igzip_igzip_rand_test_OBJECTS) $(igzip_igzip_rand_test_DEPENDENCIES) $(EXTRA_igzip_igzip_rand_test_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_rand_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_rand_test_OBJECTS) $(igzip_igzip_rand_test_LDADD) $(LIBS)
igzip/igzip_semi_dyn_file_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/igzip_semi_dyn_file_perf$(EXEEXT): $(igzip_igzip_semi_dyn_file_perf_OBJECTS) $(igzip_igzip_semi_dyn_file_perf_DEPENDENCIES) $(EXTRA_igzip_igzip_semi_dyn_file_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_semi_dyn_file_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_semi_dyn_file_perf_OBJECTS) $(igzip_igzip_semi_dyn_file_perf_LDADD) $(LIBS)
igzip/igzip_sync_flush_example.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/igzip_sync_flush_example$(EXEEXT): $(igzip_igzip_sync_flush_example_OBJECTS) $(igzip_igzip_sync_flush_example_DEPENDENCIES) $(EXTRA_igzip_igzip_sync_flush_example_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_sync_flush_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_sync_flush_example_OBJECTS) $(igzip_igzip_sync_flush_example_LDADD) $(LIBS)
igzip/igzip_wrapper_hdr_test.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)

igzip/igzip_wrapper_hdr_test$(EXEEXT): $(igzip_igzip_wrapper_hdr_test_OBJECTS) $(igzip_igzip_wrapper_hdr_test_DEPENDENCIES) $(EXTRA_igzip_igzip_wrapper_hdr_test_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_wrapper_hdr_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_wrapper_hdr_test_OBJECTS) $(igzip_igzip_wrapper_hdr_test_LDADD) $(LIBS)
mem/mem_zero_detect_perf.$(OBJEXT): mem/$(am__dirstamp) \
	mem/$(DEPDIR)/$(am__dirstamp)

mem/mem_zero_detect_perf$(EXEEXT): $(mem_mem_zero_detect_perf_OBJECTS) $(mem_mem_zero_detect_perf_DEPENDENCIES) $(EXTRA_mem_mem_zero_detect_perf_DEPENDENCIES) mem/$(am__dirstamp)
	@rm -f mem/mem_zero_detect_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mem_mem_zero_detect_perf_OBJECTS) $(mem_mem_zero_detect_perf_LDADD) $(LIBS)
mem/mem_zero_detect_test.$(OBJEXT): mem/$(am__dirstamp) \
	mem/$(DEPDIR)/$(am__dirstamp)

mem/mem_zero_detect_test$(EXEEXT): $(mem_mem_zero_detect_test_OBJECTS) $(mem_mem_zero_detect_test_DEPENDENCIES) $(EXTRA_mem_mem_zero_detect_test_DEPENDENCIES) mem/$(am__dirstamp)
	@rm -f mem/mem_zero_detect_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mem_mem_zero_detect_test_OBJECTS) $(mem_mem_zero_detect_test_LDADD) $(LIBS)
programs/$(am__dirstamp):
	@$(MKDIR_P) programs
	@: > programs/$(am__dirstamp)
programs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) programs/$(DEPDIR)
	@: > programs/$(DEPDIR)/$(am__dirstamp)
programs/igzip_cli.$(OBJEXT): programs/$(am__dirstamp) \
	programs/$(DEPDIR)/$(am__dirstamp)

programs/igzip$(EXEEXT): $(programs_igzip_OBJECTS) $(programs_igzip_DEPENDENCIES) $(EXTRA_programs_igzip_DEPENDENCIES) programs/$(am__dirstamp)
	@rm -f programs/igzip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(programs_igzip_OBJECTS) $(programs_igzip_LDADD) $(LIBS)
raid/pq_check_test.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)

raid/pq_check_test$(EXEEXT): $(raid_pq_check_test_OBJECTS) $(raid_pq_check_test_DEPENDENCIES) $(EXTRA_raid_pq_check_test_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/pq_check_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_pq_check_test_OBJECTS) $(raid_pq_check_test_LDADD) $(LIBS)
raid/pq_gen_perf.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)

raid/pq_gen_perf$(EXEEXT): $(raid_pq_gen_perf_OBJECTS) $(raid_pq_gen_perf_DEPENDENCIES) $(EXTRA_raid_pq_gen_perf_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/pq_gen_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_pq_gen_perf_OBJECTS) $(raid_pq_gen_perf_LDADD) $(LIBS)
raid/pq_gen_test.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)

raid/pq_gen_test$(EXEEXT): $(raid_pq_gen_test_OBJECTS) $(raid_pq_gen_test_DEPENDENCIES) $(EXTRA_raid_pq_gen_test_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/pq_gen_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_pq_gen_test_OBJECTS) $(raid_pq_gen_test_LDADD) $(LIBS)
raid/xor_check_test.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)

raid/xor_check_test$(EXEEXT): $(raid_xor_check_test_OBJECTS) $(raid_xor_check_test_DEPENDENCIES) $(EXTRA_raid_xor_check_test_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/xor_check_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_xor_check_test_OBJECTS) $(raid_xor_check_test_LDADD) $(LIBS)
raid/xor_example.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)

raid/xor_example$(EXEEXT): $(raid_xor_example_OBJECTS) $(raid_xor_example_DEPENDENCIES) $(EXTRA_raid_xor_example_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/xor_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_xor_example_OBJECTS) $(raid_xor_example_LDADD) $(LIBS)
raid/xor_gen_perf.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)

raid/xor_gen_perf$(EXEEXT): $(raid_xor_gen_perf_OBJECTS) $(raid_xor_gen_perf_DEPENDENCIES) $(EXTRA_raid_xor_gen_perf_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/xor_gen_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_xor_gen_perf_OBJECTS) $(raid_xor_gen_perf_LDADD) $(LIBS)
raid/xor_gen_test.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)

raid/xor_gen_test$(EXEEXT): $(raid_xor_gen_test_OBJECTS) $(raid_xor_gen_test_DEPENDENCIES) $(EXTRA_raid_xor_gen_test_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/xor_gen_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_xor_gen_test_OBJECTS) $(raid_xor_gen_test_LDADD) $(LIBS)
tests/fuzz/$(am__dirstamp):
	@$(MKDIR_P) tests/fuzz
	@: > tests/fuzz/$(am__dirstamp)
tests/fuzz/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/fuzz/$(DEPDIR)
	@: > tests/fuzz/$(DEPDIR)/$(am__dirstamp)
tests/fuzz/igzip_dump_inflate_corpus.$(OBJEXT):  \
	tests/fuzz/$(am__dirstamp) \
	tests/fuzz/$(DEPDIR)/$(am__dirstamp)

tests/fuzz/igzip_dump_inflate_corpus$(EXEEXT): $(tests_fuzz_igzip_dump_inflate_corpus_OBJECTS) $(tests_fuzz_igzip_dump_inflate_corpus_DEPENDENCIES) $(EXTRA_tests_fuzz_igzip_dump_inflate_corpus_DEPENDENCIES) tests/fuzz/$(am__dirstamp)
	@rm -f tests/fuzz/igzip_dump_inflate_corpus$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_fuzz_igzip_dump_inflate_corpus_OBJECTS) $(tests_fuzz_igzip_dump_inflate_corpus_LDADD) $(LIBS)
tests/fuzz/igzip_fuzz_inflate.$(OBJEXT): tests/fuzz/$(am__dirstamp) \
	tests/fuzz/$(DEPDIR)/$(am__dirstamp)

tests/fuzz/igzip_fuzz_inflate$(EXEEXT): $(tests_fuzz_igzip_fuzz_inflate_OBJECTS) $(tests_fuzz_igzip_fuzz_inflate_DEPENDENCIES) $(EXTRA_tests_fuzz_igzip_fuzz_inflate_DEPENDENCIES) tests/fuzz/$(am__dirstamp)
	@rm -f tests/fuzz/igzip_fuzz_inflate$(EXEEXT)
	$(AM_V_CCLD)$(tests_fuzz_igzip_fuzz_inflate_LINK) $(tests_fuzz_igzip_fuzz_inflate_OBJECTS) $(tests_fuzz_igzip_fuzz_inflate_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f crc/*.$(OBJEXT)
	-rm -f crc/*.lo
	-rm -f crc/aarch64/*.$(OBJEXT)
	-rm -f crc/aarch64/*.lo
	-rm -f erasure_code/*.$(OBJEXT)
	-rm -f erasure_code/*.lo
	-rm -f erasure_code/aarch64/*.$(OBJEXT)
	-rm -f erasure_code/aarch64/*.lo
	-rm -f erasure_code/ppc64le/*.$(OBJEXT)
	-rm -f erasure_code/ppc64le/*.lo
	-rm -f examples/ec/*.$(OBJEXT)
	-rm -f igzip/*.$(OBJEXT)
	-rm -f igzip/*.lo
	-rm -f igzip/aarch64/*.$(OBJEXT)
	-rm -f igzip/aarch64/*.lo
	-rm -f mem/*.$(OBJEXT)
	-rm -f mem/*.lo
	-rm -f mem/aarch64/*.$(OBJEXT)
	-rm -f mem/aarch64/*.lo
	-rm -f programs/*.$(OBJEXT)
	-rm -f raid/*.$(OBJEXT)
	-rm -f raid/*.lo
	-rm -f raid/aarch64/*.$(OBJEXT)
	-rm -f raid/aarch64/*.lo
	-rm -f tests/fuzz/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include crc/$(DEPDIR)/crc16_t10dif_copy_perf.Po
include crc/$(DEPDIR)/crc16_t10dif_copy_test.Po
include crc/$(DEPDIR)/crc16_t10dif_op_perf.Po
include crc/$(DEPDIR)/crc16_t10dif_perf.Po
include crc/$(DEPDIR)/crc16_t10dif_test.Po
include crc/$(DEPDIR)/crc32_funcs_test.Po
include crc/$(DEPDIR)/crc32_gzip_refl_perf.Po
include crc/$(DEPDIR)/crc32_ieee_perf.Po
include crc/$(DEPDIR)/crc32_iscsi_perf.Po
include crc/$(DEPDIR)/crc64_base.Plo
include crc/$(DEPDIR)/crc64_example.Po
include crc/$(DEPDIR)/crc64_funcs_perf.Po
include crc/$(DEPDIR)/crc64_funcs_test.Po
include crc/$(DEPDIR)/crc_base.Plo
include crc/$(DEPDIR)/crc_base_aliases.Plo
include crc/$(DEPDIR)/crc_simple_test.Po
include crc/aarch64/$(DEPDIR)/crc16_t10dif_copy_pmull.Plo
include crc/aarch64/$(DEPDIR)/crc16_t10dif_pmull.Plo
include crc/aarch64/$(DEPDIR)/crc32_gzip_refl_3crc_fold.Plo
include crc/aarch64/$(DEPDIR)/crc32_gzip_refl_crc_ext.Plo
include crc/aarch64/$(DEPDIR)/crc32_gzip_refl_pmull.Plo
include crc/aarch64/$(DEPDIR)/crc32_ieee_norm_pmull.Plo
include crc/aarch64/$(DEPDIR)/crc32_iscsi_3crc_fold.Plo
include crc/aarch64/$(DEPDIR)/crc32_iscsi_crc_ext.Plo
include crc/aarch64/$(DEPDIR)/crc32_iscsi_refl_pmull.Plo
include crc/aarch64/$(DEPDIR)/crc32_mix_default.Plo
include crc/aarch64/$(DEPDIR)/crc32_mix_neoverse_n1.Plo
include crc/aarch64/$(DEPDIR)/crc32c_mix_default.Plo
include crc/aarch64/$(DEPDIR)/crc32c_mix_neoverse_n1.Plo
include crc/aarch64/$(DEPDIR)/crc64_ecma_norm_pmull.Plo
include crc/aarch64/$(DEPDIR)/crc64_ecma_refl_pmull.Plo
include crc/aarch64/$(DEPDIR)/crc64_iso_norm_pmull.Plo
include crc/aarch64/$(DEPDIR)/crc64_iso_refl_pmull.Plo
include crc/aarch64/$(DEPDIR)/crc64_jones_norm_pmull.Plo
include crc/aarch64/$(DEPDIR)/crc64_jones_refl_pmull.Plo
include crc/aarch64/$(DEPDIR)/crc_aarch64_dispatcher.Plo
include crc/aarch64/$(DEPDIR)/crc_multibinary_arm.Plo
include erasure_code/$(DEPDIR)/ec_base.Plo
include erasure_code/$(DEPDIR)/ec_base_aliases.Plo
include erasure_code/$(DEPDIR)/ec_highlevel_func.Plo
include erasure_code/$(DEPDIR)/erasure_code_base_perf.Po
include erasure_code/$(DEPDIR)/erasure_code_base_test.Po
include erasure_code/$(DEPDIR)/erasure_code_perf.Po
include erasure_code/$(DEPDIR)/erasure_code_test.Po
include erasure_code/$(DEPDIR)/erasure_code_update_perf.Po
include erasure_code/$(DEPDIR)/erasure_code_update_test.Po
include erasure_code/$(DEPDIR)/gen_rs_matrix_limits.Po
include erasure_code/$(DEPDIR)/gf_inverse_test.Po
include erasure_code/$(DEPDIR)/gf_vect_dot_prod_1tbl.Po
include erasure_code/$(DEPDIR)/gf_vect_dot_prod_base_test.Po
include erasure_code/$(DEPDIR)/gf_vect_dot_prod_perf.Po
include erasure_code/$(DEPDIR)/gf_vect_dot_prod_test.Po
include erasure_code/$(DEPDIR)/gf_vect_mad_test.Po
include erasure_code/$(DEPDIR)/gf_vect_mul_base_test.Po
include erasure_code/$(DEPDIR)/gf_vect_mul_perf.Po
include erasure_code/$(DEPDIR)/gf_vect_mul_test.Po
include erasure_code/aarch64/$(DEPDIR)/ec_aarch64_dispatcher.Plo
include erasure_code/aarch64/$(DEPDIR)/ec_aarch64_highlevel_func.Plo
include erasure_code/aarch64/$(DEPDIR)/ec_multibinary_arm.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_2vect_dot_prod_neon.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_2vect_mad_neon.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_3vect_dot_prod_neon.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_3vect_mad_neon.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_4vect_dot_prod_neon.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_4vect_mad_neon.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_5vect_dot_prod_neon.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_5vect_mad_neon.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_6vect_mad_neon.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_vect_dot_prod_neon.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_vect_mad_neon.Plo
include erasure_code/aarch64/$(DEPDIR)/gf_vect_mul_neon.Plo
include erasure_code/ppc64le/$(DEPDIR)/ec_base_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_2vect_dot_prod_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_2vect_mad_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_3vect_dot_prod_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_3vect_mad_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_4vect_dot_prod_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_4vect_mad_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_5vect_dot_prod_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_5vect_mad_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_6vect_dot_prod_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_6vect_mad_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_vect_dot_prod_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_vect_mad_vsx.Plo
include erasure_code/ppc64le/$(DEPDIR)/gf_vect_mul_vsx.Plo
include examples/ec/$(DEPDIR)/ec_piggyback_example.Po
include examples/ec/$(DEPDIR)/ec_simple_example.Po
include igzip/$(DEPDIR)/adler32_base.Plo
include igzip/$(DEPDIR)/adler32_perf.Po
include igzip/$(DEPDIR)/checksum32_funcs_test.Po
include igzip/$(DEPDIR)/encode_df.Plo
include igzip/$(DEPDIR)/flatten_ll.Plo
include igzip/$(DEPDIR)/generate_custom_hufftables.Po
include igzip/$(DEPDIR)/generate_static_inflate.Po
include igzip/$(DEPDIR)/huff_codes.Plo
include igzip/$(DEPDIR)/hufftables_c.Plo
include igzip/$(DEPDIR)/igzip.Plo
include igzip/$(DEPDIR)/igzip_base.Plo
include igzip/$(DEPDIR)/igzip_base_aliases.Plo
include igzip/$(DEPDIR)/igzip_build_hash_table_perf.Po
include igzip/$(DEPDIR)/igzip_example.Po
include igzip/$(DEPDIR)/igzip_file_perf.Po
include igzip/$(DEPDIR)/igzip_hist_perf.Po
include igzip/$(DEPDIR)/igzip_icf_base.Plo
include igzip/$(DEPDIR)/igzip_icf_body.Plo
include igzip/$(DEPDIR)/igzip_inflate.Plo
include igzip/$(DEPDIR)/igzip_inflate_test.Po
include igzip/$(DEPDIR)/igzip_perf.Po
include igzip/$(DEPDIR)/igzip_rand_test.Po
include igzip/$(DEPDIR)/igzip_semi_dyn_file_perf.Po
include igzip/$(DEPDIR)/igzip_sync_flush_example.Po
include igzip/$(DEPDIR)/igzip_wrapper_hdr_test.Po
include igzip/$(DEPDIR)/proc_heap_base.Plo
include igzip/aarch64/$(DEPDIR)/encode_df.Plo
include igzip/aarch64/$(DEPDIR)/gen_icf_map.Plo
include igzip/aarch64/$(DEPDIR)/igzip_decode_huffman_code_block_aarch64.Plo
include igzip/aarch64/$(DEPDIR)/igzip_deflate_body_aarch64.Plo
include igzip/aarch64/$(DEPDIR)/igzip_deflate_finish_aarch64.Plo
include igzip/aarch64/$(DEPDIR)/igzip_deflate_hash_aarch64.Plo
include igzip/aarch64/$(DEPDIR)/igzip_inflate_multibinary_arm64.Plo
include igzip/aarch64/$(DEPDIR)/igzip_isal_adler32_neon.Plo
include igzip/aarch64/$(DEPDIR)/igzip_multibinary_aarch64_dispatcher.Plo
include igzip/aarch64/$(DEPDIR)/igzip_multibinary_arm64.Plo
include igzip/aarch64/$(DEPDIR)/igzip_set_long_icf_fg.Plo
include igzip/aarch64/$(DEPDIR)/isal_deflate_icf_body_hash_hist.Plo
include igzip/aarch64/$(DEPDIR)/isal_deflate_icf_finish_hash_hist.Plo
include igzip/aarch64/$(DEPDIR)/isal_update_histogram.Plo
include mem/$(DEPDIR)/mem_zero_detect_base.Plo
include mem/$(DEPDIR)/mem_zero_detect_base_aliases.Plo
include mem/$(DEPDIR)/mem_zero_detect_perf.Po
include mem/$(DEPDIR)/mem_zero_detect_test.Po
include mem/aarch64/$(DEPDIR)/mem_aarch64_dispatcher.Plo
include mem/aarch64/$(DEPDIR)/mem_multibinary_arm.Plo
include mem/aarch64/$(DEPDIR)/mem_zero_detect_neon.Plo
include programs/$(DEPDIR)/igzip_cli.Po
include raid/$(DEPDIR)/pq_check_test.Po
include raid/$(DEPDIR)/pq_gen_perf.Po
include raid/$(DEPDIR)/pq_gen_test.Po
include raid/$(DEPDIR)/raid_base.Plo
include raid/$(DEPDIR)/raid_base_aliases.Plo
include raid/$(DEPDIR)/xor_check_test.Po
include raid/$(DEPDIR)/xor_example.Po
include raid/$(DEPDIR)/xor_gen_perf.Po
include raid/$(DEPDIR)/xor_gen_test.Po
include raid/aarch64/$(DEPDIR)/pq_check_neon.Plo
include raid/aarch64/$(DEPDIR)/pq_gen_neon.Plo
include raid/aarch64/$(DEPDIR)/raid_aarch64_dispatcher.Plo
include raid/aarch64/$(DEPDIR)/raid_multibinary_arm.Plo
include raid/aarch64/$(DEPDIR)/xor_check_neon.Plo
include raid/aarch64/$(DEPDIR)/xor_gen_neon.Plo
include tests/fuzz/$(DEPDIR)/igzip_dump_inflate_corpus.Po
include tests/fuzz/$(DEPDIR)/igzip_fuzz_inflate.Po

.S.o:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.S.lo:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(LTCPPASCOMPILE) -c -o $@ $<

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

.s.o:
	$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ $<

.s.obj:
	$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.s.lo:
	$(AM_V_CCAS)$(LTCCASCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf crc/.libs crc/_libs
	-rm -rf crc/aarch64/.libs crc/aarch64/_libs
	-rm -rf erasure_code/.libs erasure_code/_libs
	-rm -rf erasure_code/aarch64/.libs erasure_code/aarch64/_libs
	-rm -rf erasure_code/ppc64le/.libs erasure_code/ppc64le/_libs
	-rm -rf examples/ec/.libs examples/ec/_libs
	-rm -rf igzip/.libs igzip/_libs
	-rm -rf igzip/aarch64/.libs igzip/aarch64/_libs
	-rm -rf mem/.libs mem/_libs
	-rm -rf mem/aarch64/.libs mem/aarch64/_libs
	-rm -rf programs/.libs programs/_libs
	-rm -rf raid/.libs raid/_libs
	-rm -rf raid/aarch64/.libs raid/aarch64/_libs
	-rm -rf tests/fuzz/.libs tests/fuzz/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-man1: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(dist_man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
erasure_code/gf_vect_mul_test.log: erasure_code/gf_vect_mul_test$(EXEEXT)
	@p='erasure_code/gf_vect_mul_test$(EXEEXT)'; \
	b='erasure_code/gf_vect_mul_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
erasure_code/erasure_code_test.log: erasure_code/erasure_code_test$(EXEEXT)
	@p='erasure_code/erasure_code_test$(EXEEXT)'; \
	b='erasure_code/erasure_code_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
erasure_code/gf_inverse_test.log: erasure_code/gf_inverse_test$(EXEEXT)
	@p='erasure_code/gf_inverse_test$(EXEEXT)'; \
	b='erasure_code/gf_inverse_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
erasure_code/erasure_code_update_test.log: erasure_code/erasure_code_update_test$(EXEEXT)
	@p='erasure_code/erasure_code_update_test$(EXEEXT)'; \
	b='erasure_code/erasure_code_update_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
raid/xor_gen_test.log: raid/xor_gen_test$(EXEEXT)
	@p='raid/xor_gen_test$(EXEEXT)'; \
	b='raid/xor_gen_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
raid/pq_gen_test.log: raid/pq_gen_test$(EXEEXT)
	@p='raid/pq_gen_test$(EXEEXT)'; \
	b='raid/pq_gen_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
raid/xor_check_test.log: raid/xor_check_test$(EXEEXT)
	@p='raid/xor_check_test$(EXEEXT)'; \
	b='raid/xor_check_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
raid/pq_check_test.log: raid/pq_check_test$(EXEEXT)
	@p='raid/pq_check_test$(EXEEXT)'; \
	b='raid/pq_check_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
crc/crc16_t10dif_test.log: crc/crc16_t10dif_test$(EXEEXT)
	@p='crc/crc16_t10dif_test$(EXEEXT)'; \
	b='crc/crc16_t10dif_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
crc/crc16_t10dif_copy_test.log: crc/crc16_t10dif_copy_test$(EXEEXT)
	@p='crc/crc16_t10dif_copy_test$(EXEEXT)'; \
	b='crc/crc16_t10dif_copy_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
crc/crc64_funcs_test.log: crc/crc64_funcs_test$(EXEEXT)
	@p='crc/crc64_funcs_test$(EXEEXT)'; \
	b='crc/crc64_funcs_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
crc/crc32_funcs_test.log: crc/crc32_funcs_test$(EXEEXT)
	@p='crc/crc32_funcs_test$(EXEEXT)'; \
	b='crc/crc32_funcs_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
igzip/igzip_rand_test.log: igzip/igzip_rand_test$(EXEEXT)
	@p='igzip/igzip_rand_test$(EXEEXT)'; \
	b='igzip/igzip_rand_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
igzip/igzip_wrapper_hdr_test.log: igzip/igzip_wrapper_hdr_test$(EXEEXT)
	@p='igzip/igzip_wrapper_hdr_test$(EXEEXT)'; \
	b='igzip/igzip_wrapper_hdr_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
igzip/checksum32_funcs_test.log: igzip/checksum32_funcs_test$(EXEEXT)
	@p='igzip/checksum32_funcs_test$(EXEEXT)'; \
	b='igzip/checksum32_funcs_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mem/mem_zero_detect_test.log: mem/mem_zero_detect_test$(EXEEXT)
	@p='mem/mem_zero_detect_test$(EXEEXT)'; \
	b='mem/mem_zero_detect_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)
dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(MANS) $(DATA) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f crc/$(DEPDIR)/$(am__dirstamp)
	-rm -f crc/$(am__dirstamp)
	-rm -f crc/aarch64/$(DEPDIR)/$(am__dirstamp)
	-rm -f crc/aarch64/$(am__dirstamp)
	-rm -f erasure_code/$(DEPDIR)/$(am__dirstamp)
	-rm -f erasure_code/$(am__dirstamp)
	-rm -f erasure_code/aarch64/$(DEPDIR)/$(am__dirstamp)
	-rm -f erasure_code/aarch64/$(am__dirstamp)
	-rm -f erasure_code/ppc64le/$(DEPDIR)/$(am__dirstamp)
	-rm -f erasure_code/ppc64le/$(am__dirstamp)
	-rm -f examples/ec/$(DEPDIR)/$(am__dirstamp)
	-rm -f examples/ec/$(am__dirstamp)
	-rm -f igzip/$(DEPDIR)/$(am__dirstamp)
	-rm -f igzip/$(am__dirstamp)
	-rm -f igzip/aarch64/$(DEPDIR)/$(am__dirstamp)
	-rm -f igzip/aarch64/$(am__dirstamp)
	-rm -f mem/$(DEPDIR)/$(am__dirstamp)
	-rm -f mem/$(am__dirstamp)
	-rm -f mem/aarch64/$(DEPDIR)/$(am__dirstamp)
	-rm -f mem/aarch64/$(am__dirstamp)
	-rm -f programs/$(DEPDIR)/$(am__dirstamp)
	-rm -f programs/$(am__dirstamp)
	-rm -f raid/$(DEPDIR)/$(am__dirstamp)
	-rm -f raid/$(am__dirstamp)
	-rm -f raid/aarch64/$(DEPDIR)/$(am__dirstamp)
	-rm -f raid/aarch64/$(am__dirstamp)
	-rm -f tests/fuzz/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/fuzz/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf crc/$(DEPDIR) crc/aarch64/$(DEPDIR) erasure_code/$(DEPDIR) erasure_code/aarch64/$(DEPDIR) erasure_code/ppc64le/$(DEPDIR) examples/ec/$(DEPDIR) igzip/$(DEPDIR) igzip/aarch64/$(DEPDIR) mem/$(DEPDIR) mem/aarch64/$(DEPDIR) programs/$(DEPDIR) raid/$(DEPDIR) raid/aarch64/$(DEPDIR) tests/fuzz/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man install-nobase_includeHEADERS \
	install-pkgconfigDATA install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf crc/$(DEPDIR) crc/aarch64/$(DEPDIR) erasure_code/$(DEPDIR) erasure_code/aarch64/$(DEPDIR) erasure_code/ppc64le/$(DEPDIR) examples/ec/$(DEPDIR) igzip/$(DEPDIR) igzip/aarch64/$(DEPDIR) mem/$(DEPDIR) mem/aarch64/$(DEPDIR) programs/$(DEPDIR) raid/$(DEPDIR) raid/aarch64/$(DEPDIR) tests/fuzz/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-man uninstall-nobase_includeHEADERS \
	uninstall-pkgconfigDATA uninstall-pkgincludeHEADERS

uninstall-man: uninstall-man1

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \
	check-am clean clean-binPROGRAMS clean-checkPROGRAMS \
	clean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES cscope cscopelist-am ctags ctags-am \
	dist dist-all dist-bzip2 dist-gzip dist-lzip dist-shar \
	dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-man1 \
	install-nobase_includeHEADERS install-pdf install-pdf-am \
	install-pkgconfigDATA install-pkgincludeHEADERS install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES uninstall-man uninstall-man1 \
	uninstall-nobase_includeHEADERS uninstall-pkgconfigDATA \
	uninstall-pkgincludeHEADERS


igzip_perf: LDLIBS += -lz
igzip_inflate_test: LDLIBS += -lz
igzip_fuzz_inflate: igzip_checked_inflate_fuzz_test.o
igzip_fuzz_inflate: LDLIBS += -lz

igzip_checked_inflate_fuzz_test: LDLIBS += -lz

programs/igzip.1: % : %.h2m programs/igzip_cli.c
	-help2man -o $@ -i $< -N ./programs/igzip

programs:${progs}
perfs: ${perf_tests}
tests: ${unit_tests}
checks: ${check_tests}
other: ${other_tests}
perf: $(addsuffix .run,$(perf_tests))
ex: ${examples}
test: $(addsuffix .run,$(unit_tests))

# Build rule to run tests
%.run: %
	$<
	@echo Completed run: $<

# Support for yasm/nasm/gas
#export CET_LD=$(LD)

.asm.s:
	@echo "  MKTMP   " $@;
	@cp $< $@
isa-l.h:
	@echo 'Building $@'
	@echo ''			>> $@
	@echo '/**'                     >> $@
	@echo ' *  @file isa-l.h'       >> $@
	@echo ' *  @brief Include for ISA-L library' >> $@
	@echo ' */'                     >> $@
	@echo ''                        >> $@
	@echo '#ifndef _ISAL_H_'	>> $@
	@echo '#define _ISAL_H_'	>> $@
	@echo ''			>> $@
	@echo '#define.ISAL_MAJOR_VERSION.${VERSION}' |  ${AWK} -F . '{print $$1, $$2, $$3}' >> $@
	@echo '#define.ISAL_MINOR_VERSION.${VERSION}' |  ${AWK} -F . '{print $$1, $$2, $$4}' >> $@
	@echo '#define.ISAL_PATCH_VERSION.${VERSION}' |  ${AWK} -F . '{print $$1, $$2, $$5}' >> $@
	@echo '#define ISAL_MAKE_VERSION(maj, min, patch)  ((maj) * 0x10000 + (min) * 0x100 + (patch))' >> $@
	@echo '#define ISAL_VERSION ISAL_MAKE_VERSION(ISAL_MAJOR_VERSION, ISAL_MINOR_VERSION, ISAL_PATCH_VERSION)' >> $@
	@echo ''			>> $@
	@for unit in $(sort $(extern_hdrs)); do echo "#include <isa-l/$$unit>" | sed -e 's;include/;;' >> $@; done
	@echo '#endif //_ISAL_H_'	>> $@

doc: isa-l.h
	(cat Doxyfile; echo 'PROJECT_NUMBER=${VERSION}') | doxygen -
	$(MAKE) -C generated_doc/latex &> generated_doc/latex_build_api.log
	cp generated_doc/latex/refman.pdf isa-l_api_${VERSION}.pdf

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
